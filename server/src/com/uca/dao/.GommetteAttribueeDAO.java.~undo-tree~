(undo-tree-save-format-version . 1)
"9eed7c479c630436d76d58cd42975c3b70afbc57"
[nil nil nil nil (25173 57809 936442 189000) 0 nil]
([nil nil ((#("n" 0 1 (clang-format+-chg delete fontified t)) . 759) (#("i" 0 1 (clang-format+-chg delete fontified t)) . 759) (#("r" 0 1 (clang-format+-chg delete fontified t)) . 759) (#("t" 0 1 (clang-format+-chg delete fontified t)) . 759) (#("S" 0 1 (fontified t)) . 759) (t 25173 28509 838643 55000)) nil (25173 58204 629447 883000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . -22) 1 (t 25173 28509 838643 55000)) ((nil clang-format+-chg delete 23 . 24) (22 . 23)) (25173 57809 935823 973000) 0 nil])
([nil nil ((#("g" 0 1 (clang-format+-chg delete fontified t)) . 759)) nil (25173 58204 629445 88000) 0 nil])
nil
([nil nil ((759 . 762)) nil (25173 58204 629443 715000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -811) (undo-tree-id0 . -1) (#("t" 0 1 (fontified t)) . -812) (undo-tree-id1 . -1) (#("r" 0 1 (fontified t)) . -813) (undo-tree-id2 . -1) (#("i" 0 1 (fontified t)) . -814) (undo-tree-id3 . -1) (#("n" 0 1 (fontified t)) . -815) (undo-tree-id4 . -1) (#("g" 0 1 (fontified t)) . -816) (undo-tree-id5 . -1) 817) nil (25173 58204 629440 219000) 0 nil])
([nil nil ((811 . 814)) nil (25173 58204 629402 427000) 0 nil])
([nil nil ((#("g" 0 1 (clang-format+-chg delete fontified t)) . 864) (#("n" 0 1 (clang-format+-chg delete fontified t)) . 864) (#("i" 0 1 (clang-format+-chg delete fontified t)) . 864) (#("r" 0 1 (clang-format+-chg delete fontified t)) . 864) (#("t" 0 1 (clang-format+-chg delete fontified t)) . 864) (#("S" 0 1 (fontified t)) . 864)) nil (25173 58204 629398 350000) 0 nil])
([nil nil ((864 . 867)) nil (25173 58204 629390 645000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -987) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -988) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -989) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -990) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -991) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -992) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -993) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -994) (undo-tree-id25 . -1) (#("	" 0 1 (fontified nil)) . 995) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (987 . 995) 988 (t 25173 58204 635999 175000)) nil (25174 26330 11670 120000) 0 nil])
([nil current ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -986) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -987) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -988) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -989) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("	" 0 1 (fontified nil)) . 990) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (986 . 990) 987) nil (25174 26330 11630 506000) 0 nil])
nil
