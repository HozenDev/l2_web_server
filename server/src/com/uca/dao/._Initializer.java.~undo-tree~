(undo-tree-save-format-version . 1)
"da3f9f0ca47482b6b08934e36c66cdef6a8ebcb2"
[nil nil nil nil (25173 57900 129041 216000) 0 nil]
([nil nil ((1845 . 1850) (#("	    " 0 5 (clang-format+-chg chg fontified nil)) . 1844) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (1843 . 1850) (t 25173 29111 818629 345000)) nil (25173 57900 129039 222000) 0 nil])
([nil nil ((1844 . 1849)) nil (25173 57900 129035 275000) 0 nil])
([nil nil ((1849 . 1851)) nil (25173 57900 129034 73000) 0 nil])
([nil nil ((#("a" 0 1 (clang-format+-chg chg fontified t)) . -1850) (undo-tree-id48 . -1) 1851) nil (25173 57900 129032 369000) 0 nil])
([nil nil ((1850 . 1867)) nil (25173 57900 129029 845000) 0 nil])
([nil nil ((#("x" 0 1 (clang-format+-chg chg fontified t)) . -1866) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 1867) nil (25173 57900 129027 851000) 0 nil])
([nil nil ((#("c" 0 1 (clang-format+-chg chg fontified t)) . -1861) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("o" 0 1 (clang-format+-chg chg fontified t)) . -1862) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -1863) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -1864) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t)) . -1865) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 1866) nil (25173 57900 129020 757000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1945 . 1946) (nil fontified nil 1944 . 1946) (nil fontified nil 1889 . 1944) (nil fontified nil 1861 . 1889) (1861 . 1946)) nil (25173 57900 129004 316000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1902) (undo-tree-id23 . -1) (#("l" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1903) (undo-tree-id24 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1904) (undo-tree-id25 . -1) (#("v" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1905) (undo-tree-id26 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1906) (undo-tree-id27 . -1) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1907) (undo-tree-id28 . -1) 1908) nil (25173 57900 128999 658000) 0 nil])
([nil nil ((1902 . 1911)) nil (25173 57900 128991 602000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1912) (undo-tree-id14 . -1) (#("i" 0 1 (face font-lock-string-face fontified nil clang-format+-chg chg)) . -1913) (undo-tree-id15 . -1) (#("r" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1914) (undo-tree-id16 . -1) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1915) (undo-tree-id17 . -1) (#("t" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1916) (undo-tree-id18 . -1) (#("n" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1917) (undo-tree-id19 . -1) (#("a" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1918) (undo-tree-id20 . -1) (#("m" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1919) (undo-tree-id21 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1920) (undo-tree-id22 . -1) 1921) nil (25173 57900 128987 364000) 0 nil])
([nil nil ((1912 . 1917)) nil (25173 57900 128975 51000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("m" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("a" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("n" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("t" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("a" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("l" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . 1919)) nil (25173 57900 128971 484000) 0 nil])
([nil nil ((1919 . 1930)) nil (25173 57900 128968 689000) 0 nil])
([nil nil ((1950 . 1955) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 1949) (undo-tree-id13 . -5) (1954 . 1955)) nil (25173 57900 128966 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2080 . 2081) (nil fontified nil 2035 . 2081) (nil fontified nil 2028 . 2035) (nil fontified nil 1992 . 2028) (nil fontified nil 1990 . 1992) (nil fontified nil 1984 . 1990) (nil fontified nil 1971 . 1984) (nil fontified nil 1949 . 1971) (1949 . 2081)) nil (25173 57900 128963 910000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2077) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -2078) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -2079) (undo-tree-id11 . -1) (#(" " 0 1 (rear-nonsticky t fontified t clang-format+-chg chg)) . -2080) (undo-tree-id12 . -1) 2081) nil (25173 57900 128959 562000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -2076) (undo-tree-id5 . -1) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . -2077) (undo-tree-id6 . -1) (#("	" 0 1 (fontified nil clang-format+-chg chg)) . 2078) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (2076 . 2078) 2077) nil (25173 57900 128952 669000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1985) (#("z" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1985) (#("n" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1985) (#("E" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . 1985)) nil (25173 57900 128944 854000) 0 nil])
([nil nil ((1985 . 1990)) nil (25173 57900 128942 760000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2030) (undo-tree-id0 . -1) (#("u" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2031) (undo-tree-id1 . -1) (#("r" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2032) (undo-tree-id2 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2033) (undo-tree-id3 . -1) (#("l" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2034) (undo-tree-id4 . -1) 2035) nil (25173 57900 128939 83000) 0 nil])
([nil nil ((2030 . 2040)) nil (25173 57900 128900 981000) 0 nil])
([nil nil ((970 . 971) (#(")" 0 1 (clang-format+-chg chg face font-lock-string-face fontified nil)) . -970) (970 . 971) (t 25173 57900 127565 945000)) nil (25173 58391 347399 195000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face clang-format+-chg chg fontified t)) . -970) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 971) nil (25173 58391 347396 330000) 0 nil])
([nil nil ((970 . 971) (#(")" 0 1 (clang-format+-chg chg face font-lock-string-face fontified nil)) . -970) (970 . 971)) nil (25173 58391 347388 445000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . -969) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(")" 0 1 (face font-lock-string-face clang-format+-chg chg fontified t)) . -970) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 971) nil (25173 58391 347384 908000) 0 nil])
([nil nil ((969 . 970) (#(")" 0 1 (clang-format+-chg chg face font-lock-string-face fontified nil)) . -969) (969 . 970)) nil (25173 58631 425888 907000) 0 nil])
([nil nil ((982 . 983) (t 25173 58391 342717 351000)) nil (25173 58649 961198 739000) 0 nil] [nil nil ((1001 . 1005) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (1000 . 1001) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (957 . 969) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (956 . 957) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 986 . 987) (nil syntax-table nil 983 . 984) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 956) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (879 . 891) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 975 . 976) (nil syntax-table nil 972 . 973) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (878 . 879) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 878) (975 . 976) (t 25173 58391 342717 351000)) ((#("
" 0 1 (face font-lock-warning-face clang-format+-chg chg fontified nil)) . 975) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (nil clang-format+-chg delete 879 . 880) (878 . 879) (#("
" 0 1 (face font-lock-warning-face clang-format+-chg chg fontified nil)) . 878) (nil syntax-table nil 975 . 976) (nil syntax-table nil 972 . 973) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 972 . 973) (nil syntax-table nil 975 . 976) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 984 . 985) (nil syntax-table nil 987 . 988) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil clang-format+-chg delete 957 . 958) (956 . 957) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 986 . 987) (nil syntax-table nil 983 . 984) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 983 . 984) (nil syntax-table nil 986 . 987) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#("
" 0 1 (clang-format+-chg chg fontified nil)) . 956) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 984 . 985) (nil syntax-table nil 987 . 988) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 957) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 999 . 1000) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 996 . 997) (nil syntax-table nil 999 . 1000) (#("	" 0 1 (fontified nil clang-format+-chg chg)) . 1000) (undo-tree-id60 . -1) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 999 . 1000) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 996 . 997) (nil syntax-table nil 999 . 1000) (#("    " 0 4 (fontified t clang-format+-chg chg)) . 1001) (undo-tree-id61 . -4) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852)) (25173 58631 420509 211000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start clang-format+-chg chg fontified t)) . -982) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 983) nil (25173 58649 961196 795000) 0 nil])
nil
([nil nil ((977 . 982) (#("      " 0 1 (clang-format+-chg delete fontified nil) 1 6 (fontified nil)) . 977) (#("      " 0 6 (fontified nil)) . 976) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (982 . 983)) nil (25173 58649 961191 806000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1006 . 1007) (nil fontified nil 976 . 1007) (976 . 1007)) nil (25173 58649 961186 877000) 0 nil])
([nil nil ((800 . 805) (#("            " 0 12 (fontified nil)) . 799) (undo-tree-id63 . -12) (811 . 812)) nil (25173 58649 961184 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 829 . 830) (nil fontified nil 799 . 830) (799 . 830)) nil (25173 58649 961180 565000) 0 nil])
([nil nil ((631 . 632)) nil (25173 58649 961178 922000) 0 nil])
([nil nil ((nil rear-nonsticky nil 661 . 662) (nil fontified nil 631 . 662) (631 . 662)) nil (25173 58649 961177 339000) 0 nil])
([nil nil ((426 . 432)) nil (25173 58649 961174 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 462 . 463) (nil fontified nil 432 . 463) (432 . 463)) nil (25173 58649 961171 938000) 0 nil])
([nil nil ((427 . 432) (#("	    	    " 0 5 (clang-format+-chg chg fontified t) 5 10 (fontified t clang-format+-chg chg)) . 427) (undo-tree-id62 . -5) 463) nil (25173 58649 961165 476000) 0 nil])
([nil nil ((2198 . 2203) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 2197) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (2196 . 2203) (t 25173 58649 966482 543000)) nil (25174 26541 81953 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2435 . 2436) (nil fontified nil 2398 . 2436) (nil fontified nil 2395 . 2398) (nil fontified nil 2383 . 2395) (nil fontified nil 2347 . 2383) (nil fontified nil 2345 . 2347) (nil fontified nil 2338 . 2345) (nil fontified nil 2317 . 2338) (nil fontified nil 2300 . 2317) (nil fontified nil 2243 . 2300) (nil fontified nil 2198 . 2243) (2198 . 2436)) nil (25174 26541 81945 555000) 0 nil])
([nil nil ((2297 . 2298)) nil (25174 26541 578120 246000) 0 nil])
([nil nil ((2298 . 2300)) nil (25174 26606 933672 184000) 0 nil] [nil nil ((2311 . 2312) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2256 . 2268) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2304 . 2305) (nil syntax-table nil 2301 . 2302) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2255 . 2256) (#(" " 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 2255) (2298 . 2299)) ((#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2298) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (2255 . 2256) (#("
" 0 1 (clang-format+-chg chg fontified nil face font-lock-warning-face)) . 2255) (undo-tree-id11 . -1) (nil syntax-table nil 2304 . 2305) (nil syntax-table nil 2301 . 2302) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2301 . 2302) (nil syntax-table nil 2304 . 2305) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("?" 0 1 (fontified t)) . 2311) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) (25174 26541 228701 91000) 0 nil])
([nil nil ((2300 . 2301)) nil (25174 26606 933670 392000) 0 nil])
([nil nil ((2262 . 2266) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2312 . 2313) (nil syntax-table nil 2309 . 2310) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2256 . 2262) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2306 . 2307) (nil syntax-table nil 2303 . 2304) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2318 . 2319) (nil syntax-table nil 2315 . 2316) (nil syntax-table nil 2255 . 2256) (nil syntax-table (1) 2243 . 2244) (2312 . 2313) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table (1) 2243 . 2244)) ((nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("," 0 1 (clang-format+-chg chg fontified nil)) . 2312) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2318 . 2319) (nil syntax-table nil 2315 . 2316) (nil syntax-table nil 2255 . 2256) (nil syntax-table (1) 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2315 . 2316) (nil syntax-table nil 2318 . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil clang-format+-chg delete 2268 . 2269) (2256 . 2268) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2306 . 2307) (nil syntax-table nil 2303 . 2304) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2303 . 2304) (nil syntax-table nil 2306 . 2307) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("						" 0 6 (clang-format+-chg chg fontified nil)) . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2312 . 2313) (nil syntax-table nil 2309 . 2310) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2309 . 2310) (nil syntax-table nil 2312 . 2313) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("    " 0 4 (clang-format+-chg chg fontified t)) . 2262) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) (25174 26541 88937 244000) 0 nil])
([nil nil ((2301 . 2303)) nil (25174 26606 933668 610000) 0 nil])
([nil nil ((2319 . 2329) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2318 . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2326 . 2327) (nil syntax-table nil 2323 . 2324) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2318) (undo-tree-id0 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2283 . 2293) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2282 . 2283) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2282) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2311 . 2312) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) ((nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2311) (undo-tree-id3 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil clang-format+-chg delete 2283 . 2284) (2282 . 2283) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("
" 0 1 (clang-format+-chg chg fontified nil)) . 2282) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("						    " 0 10 (clang-format+-chg chg fontified nil)) . 2283) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil clang-format+-chg delete 2319 . 2320) (2318 . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2326 . 2327) (nil syntax-table nil 2323 . 2324) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2323 . 2324) (nil syntax-table nil 2326 . 2327) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("
" 0 1 (clang-format+-chg chg fontified nil)) . 2318) (undo-tree-id4 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("						    " 0 10 (clang-format+-chg chg fontified t)) . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2337 . 2338) (nil syntax-table nil 2334 . 2335) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) (25174 26541 81901 239000) 0 nil])
([nil nil ((2303 . 2304)) nil (25174 26606 933666 628000) 0 nil])
nil
([nil nil ((2304 . 2306)) nil (25174 26606 933664 796000) 0 nil])
([nil nil ((#("1" 0 1 (clang-format+-chg chg fontified t)) . -2344) (undo-tree-id34 . -1) 2345) nil (25174 26606 933662 513000) 0 nil])
([nil nil ((2344 . 2345)) nil (25174 26606 933658 379000) 0 nil])
([nil nil ((#("S" 0 1 (clang-format+-chg chg fontified t)) . -2337) (undo-tree-id28 . -1) (#("t" 0 1 (clang-format+-chg chg fontified t)) . -2338) (undo-tree-id29 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t)) . -2339) (undo-tree-id30 . -1) (#("i" 0 1 (clang-format+-chg chg fontified t)) . -2340) (undo-tree-id31 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -2341) (undo-tree-id32 . -1) (#("g" 0 1 (clang-format+-chg chg fontified t)) . -2342) (undo-tree-id33 . -1) 2343) nil (25174 26606 933653 363000) 0 nil])
([nil nil ((2337 . 2340)) nil (25174 26606 933641 700000) 0 nil])
([nil nil ((#("R" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2345) (undo-tree-id23 . -1) (#("o" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2346) (undo-tree-id24 . -1) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2347) (undo-tree-id25 . -1) (#("g" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2348) (undo-tree-id26 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2349) (undo-tree-id27 . -1) 2350) nil (25174 26606 933636 995000) 0 nil])
([nil nil ((#("\"" 0 1 (clang-format+-chg chg fontified t face font-lock-warning-face)) . -2344) (undo-tree-id21 . -1) (nil syntax-table nil 2347 . 2348) (nil syntax-table (1) 2344 . 2345) (#("\"" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . -2345) (undo-tree-id22 . -1) 2346) nil (25174 26606 933625 162000) 0 nil])
([nil nil ((2344 . 2345)) nil (25174 26606 933618 775000) 0 nil])
([nil nil ((#("\"" 0 1 (clang-format+-chg delete fontified t face font-lock-warning-face)) . 2383) (nil syntax-table nil 2386 . 2387) (nil syntax-table (1) 2383 . 2384) (#("s" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2387 . 2388) (nil syntax-table (1) 2384 . 2385) (#("e" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2388 . 2389) (nil syntax-table (1) 2385 . 2386) (#("g" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2389 . 2390) (nil syntax-table (1) 2386 . 2387) (#("a" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2390 . 2391) (nil syntax-table (1) 2387 . 2388) (#("d" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2391 . 2392) (nil syntax-table (1) 2388 . 2389) (#("r" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2392 . 2393) (nil syntax-table (1) 2389 . 2390) (#("a" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2393 . 2394) (nil syntax-table (1) 2390 . 2391) (#("v" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2394 . 2395) (nil syntax-table (1) 2391 . 2392) (#("a" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2395 . 2396) (nil syntax-table (1) 2392 . 2393) (#("B" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2396 . 2397) (nil syntax-table (1) 2393 . 2394) (#("\"" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 2383)) nil (25174 26606 933609 985000) 0 nil])
([nil nil ((2383 . 2384)) nil (25174 26606 933597 802000) 0 nil])
([nil nil ((#("S" 0 1 (clang-format+-chg chg fontified t)) . -2373) (undo-tree-id15 . -1) (#("t" 0 1 (clang-format+-chg chg fontified t)) . -2374) (undo-tree-id16 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t)) . -2375) (undo-tree-id17 . -1) (#("i" 0 1 (clang-format+-chg chg fontified t)) . -2376) (undo-tree-id18 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -2377) (undo-tree-id19 . -1) (#("g" 0 1 (clang-format+-chg chg fontified t)) . -2378) (undo-tree-id20 . -1) 2379) nil (25174 26606 933591 885000) 0 nil])
([nil nil ((2373 . 2376)) nil (25174 26606 933552 622000) 0 nil])
([nil nil ((2383 . 2389) (t 25174 26606 968811 249000)) nil (25174 26690 102199 421000) 0 nil])
([nil nil ((2389 . 2391)) nil (25174 26690 102196 427000) 0 nil])
([nil nil ((2391 . 2405)) nil (25174 26690 102194 264000) 0 nil])
([nil nil ((2405 . 2407)) nil (25174 26690 102191 911000) 0 nil])
([nil nil ((2406 . 2407)) nil (25174 26690 102189 868000) 0 nil])
([nil nil ((2407 . 2408)) nil (25174 26690 102187 986000) 0 nil])
([nil nil ((2408 . 2410)) nil (25174 26690 102185 682000) 0 nil])
([nil nil ((2411 . 2412)) nil (25174 26690 102183 910000) 0 nil])
([nil nil ((2412 . 2418)) nil (25174 26690 102181 887000) 0 nil])
([nil nil ((2418 . 2427)) nil (25174 26690 102179 935000) 0 nil])
([nil nil ((2427 . 2437)) nil (25174 26690 102178 162000) 0 nil])
([nil nil ((2437 . 2439)) nil (25174 26690 102176 300000) 0 nil])
([nil nil ((2438 . 2439)) nil (25174 26690 102173 576000) 0 nil])
([nil nil ((2439 . 2440)) nil (25174 26690 102170 972000) 0 nil])
([nil nil ((2442 . 2443) (nil syntax-table nil 2443 . 2444) (nil syntax-table (1) 2441 . 2442) (2441 . 2442) (#("\"" 0 1 (clang-format+-chg chg fontified nil)) . -2441) (nil syntax-table nil 2443 . 2444) (nil syntax-table (1) 2441 . 2442) (2440 . 2442)) nil (25174 26690 102167 598000) 0 nil])
([nil nil ((2442 . 2444)) nil (25174 26690 102163 352000) 0 nil])
([nil nil ((2444 . 2445)) nil (25174 26690 102161 470000) 0 nil])
([nil nil ((2445 . 2447)) nil (25174 26690 102158 886000) 0 nil])
([nil nil ((2447 . 2448)) nil (25174 26690 102156 62000) 0 nil])
([nil nil ((2448 . 2450)) nil (25174 26690 102147 100000) 0 nil])
([nil nil ((2452 . 2453) (t 25174 26690 139370 615000)) nil (25174 26743 826830 764000) 0 nil])
([nil nil ((2453 . 2459)) nil (25174 26743 826828 548000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2493 . 2494) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2454 . 2459) (2454 . 2494)) nil (25174 26743 826823 566000) 0 nil])
([nil nil ((#("4" 0 1 (clang-format+-chg chg fontified t)) . -2479) (undo-tree-id36 . -1) 2480) nil (25174 26743 826809 29000) 0 nil])
([nil nil ((2479 . 2480)) nil (25174 26743 826803 987000) 0 nil])
([nil nil ((#("2" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("1" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("/" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("1" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("3" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("/" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("0" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("1" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 2483)) nil (25174 26743 826798 192000) 0 nil])
([nil nil ((2483 . 2504)) nil (25174 26743 826793 370000) 0 nil])
([nil nil ((2504 . 2505)) nil (25174 26743 826791 395000) 0 nil])
([nil nil ((#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2504) (undo-tree-id35 . -1) 2505) nil (25174 26743 826787 556000) 0 nil])
([nil nil ((2504 . 2507)) nil (25174 26743 826763 556000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . -2506) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 2507 (t 25174 26743 836223 219000)) nil (25174 26745 802563 823000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2554) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#(" " 0 1 (fontified t)) . -2555) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -2556) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t)) . -2557) (undo-tree-id55 . -1) 2558 (t 25174 26745 813403 522000)) nil (25174 26749 103738 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2553) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -2554) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("	" 0 1 (fontified nil)) . 2555) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (2553 . 2555) 2554) nil (25174 26749 103718 166000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2510) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t)) . -2511) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (fontified t)) . -2512) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#(" " 0 1 (fontified t)) . -2513) (undo-tree-id69 . -1) 2514 (t 25174 26749 139214 869000)) nil (25174 26752 54868 494000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2509) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -2510) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("	" 0 1 (fontified nil)) . 2511) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (2509 . 2511) 2510) nil (25174 26752 54847 154000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1952) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -1953) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t)) . -1954) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#(" " 0 1 (fontified t)) . -1955) (undo-tree-id83 . -1) 1956 (t 25174 26752 64642 289000)) nil (25174 26762 108738 643000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -1951) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -1952) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("	" 0 1 (fontified nil)) . 1953) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (1951 . 1953) 1952) nil (25174 26762 108714 901000) 0 nil])
([nil nil ((2260 . 2270) (t 25174 26762 144553 947000)) nil (25174 26887 88085 726000) 0 nil])
([nil nil ((2270 . 2271) (t 25174 26887 92718 197000)) nil (25174 26889 611451 589000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2270) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 2271) nil (25174 26889 611443 765000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -2271) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2272) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -2273) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2274) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -2275) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -2276) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2277) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -2278) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -2279) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -2280) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -2281) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -2282) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2283) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -2284) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2285) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2286) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2287) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2288) (undo-tree-id222 . -1) 2289 (t 25174 26889 620575 496000)) nil (25174 26955 987615 178000) 0 nil])
([nil nil ((2271 . 2281)) nil (25174 26955 987310 845000) 0 nil])
([nil nil ((2281 . 2282)) nil (25174 26955 987309 21000) 0 nil])
([nil nil ((2282 . 2290)) nil (25174 26955 987307 178000) 0 nil])
([nil nil ((2290 . 2291)) nil (25174 26955 987305 365000) 0 nil])
([nil nil ((2291 . 2303)) nil (25174 26955 987303 371000) 0 nil])
([nil nil ((2303 . 2304)) nil (25174 26955 987301 488000) 0 nil])
([nil nil ((2304 . 2309)) nil (25174 26955 987299 574000) 0 nil])
([nil nil ((2309 . 2310)) nil (25174 26955 987297 551000) 0 nil])
([nil nil ((2310 . 2315)) nil (25174 26955 987294 876000) 0 nil])
([nil nil ((2315 . 2319)) nil (25174 26955 987286 250000) 0 nil])
([nil nil ((#("	    // TODO" 0 1 (fontified t c-is-sws t) 1 5 (fontified t c-in-sws t) 5 8 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 8 12 (fontified t face font-lock-comment-face c-in-sws t)) . 1424) (undo-tree-id226 . -12) (undo-tree-id227 . -12) (undo-tree-id228 . -12) (undo-tree-id229 . -12) (undo-tree-id230 . -12) (undo-tree-id231 . -12) (undo-tree-id232 . -12) (undo-tree-id233 . -12) (undo-tree-id234 . -12) 1436 (t 25174 26955 996835 989000)) nil (25174 27097 272539 553000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1984 . 1985) (nil fontified nil 1433 . 1985) (nil fontified nil 1432 . 1433) (nil fontified nil 1425 . 1432) (nil fontified nil 1424 . 1425) (1424 . 1985)) nil (25174 27097 272519 968000) 0 nil])
([nil nil ((1924 . 1929) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1924) (1843 . 1848) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1843) (1810 . 1815) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1810) (1739 . 1744) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1739) (1698 . 1703) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1698) (1630 . 1635) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1630) (1597 . 1602) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1597) (1524 . 1529) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1524) (1491 . 1496) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1491) (1424 . 1429) (#("        " 0 1 (c-is-sws t c-in-sws t clang-format+-chg chg fontified t) 1 8 (c-is-sws t c-in-sws t clang-format+-chg chg fontified t)) . 1424)) nil (25174 27097 272511 252000) 0 nil])
([nil nil ((#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1564) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1670) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1779) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1883) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . -1470) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (1570 . 1576) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1570) (1676 . 1682) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1676) (1785 . 1791) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1785) (1889 . 1895) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1889) 1476) nil (25174 27097 272500 151000) 0 nil])
([nil nil ((1569 . 1574) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1673 . 1678) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1673) (1780 . 1785) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1780) (1882 . 1887) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1882) (1474 . 1475) (1568 . 1572) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1672 . 1676) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1672) (1779 . 1783) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1779) (1881 . 1885) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1881) (1568 . 1572) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1671 . 1675) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1671) (1777 . 1781) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1777) (1878 . 1882) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1878) (1473 . 1474) (1567 . 1570) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1567) (1670 . 1673) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1670) (1776 . 1779) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1776) (1877 . 1880) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1877) (1567 . 1570) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1567) (1669 . 1672) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1669) (1774 . 1777) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1774) (1874 . 1877) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1874) (1472 . 1473) (1566 . 1568) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1566) (1668 . 1670) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1668) (1773 . 1775) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1773) (1873 . 1875) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1873) (1566 . 1568) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1566) (1667 . 1669) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1667) (1771 . 1773) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1771) (1870 . 1872) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1870) (1471 . 1472) (1565 . 1566) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1565) (1666 . 1667) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1666) (1770 . 1771) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1770) (1869 . 1870) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1869) (1565 . 1566) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1565) (1666 . 1667) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1666) (1770 . 1771) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1770) (1869 . 1870) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1869) (1565 . 1566) (1665 . 1666) (1768 . 1769) (1866 . 1867) (1470 . 1471)) nil (25174 27097 272475 426000) 0 nil])
([nil nil ((1568 . 1572) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1673 . 1677) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1673) (1781 . 1785) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1781) (1884 . 1888) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1884) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -1474) (undo-tree-id223 . -1) (1569 . 1574) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1674 . 1679) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1674) (1782 . 1787) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1782) (1885 . 1890) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1885) 1475) nil (25174 27097 272444 951000) 0 nil])
([nil nil ((1572 . 1580) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1572) (1679 . 1687) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1679) (1789 . 1797) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1789) (1894 . 1902) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1894) (1477 . 1478) (1571 . 1578) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1571) (1678 . 1685) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1678) (1788 . 1795) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1788) (1893 . 1900) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1893) (1571 . 1578) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1571) (1677 . 1684) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1677) (1786 . 1793) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1786) (1890 . 1897) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1890) (1476 . 1477) (1570 . 1576) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1570) (1676 . 1682) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1676) (1785 . 1791) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1785) (1889 . 1895) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1889) (1570 . 1576) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1570) (1675 . 1681) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1675) (1783 . 1789) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1783) (1886 . 1892) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1886) (1475 . 1476) (1569 . 1574) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1674 . 1679) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1674) (1782 . 1787) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1782) (1885 . 1890) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1885) (1569 . 1574) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1673 . 1678) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1673) (1780 . 1785) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1780) (1882 . 1887) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1882) (1474 . 1475) (1568 . 1572) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1672 . 1676) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1672) (1779 . 1783) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1779) (1881 . 1885) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1881) 1474) nil (25174 27097 272399 789000) 0 nil])
([nil nil ((#("	    // remove all instance in sql base
	    statement = connection.prepareStatement(\"TRUNCATE FROM users\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE FROM professeurs\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE FROM eleves\");
	    statement.executeUpdate();
        
	    statement = connection.prepareStatement(\"TRUNCATE FROM gommettes\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE FROM gommettesAttribuees\");
	    statement.executeUpdate();" 0 5 (fontified t c-in-sws t c-is-sws t) 5 6 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 6 8 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 8 39 (fontified t face font-lock-comment-face c-in-sws t) 39 40 (fontified t face font-lock-comment-face c-in-sws t) 40 41 (fontified t c-is-sws t c-in-sws t) 41 45 (fontified t c-is-sws t c-in-sws t) 45 46 (c-is-sws t fontified t) 46 85 (fontified t) 85 86 (fontified t face font-lock-string-face) 86 87 (fontified t face font-lock-string-face) 87 88 (fontified t face font-lock-string-face) 88 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-string-face) 90 91 (fontified t face font-lock-string-face) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t face font-lock-string-face) 95 106 (fontified t face font-lock-string-face) 106 109 (fontified t) 109 114 (fontified t) 114 115 (fontified t) 115 141 (fontified t) 141 142 (fontified t) 142 147 (fontified t) 147 148 (fontified t) 148 187 (fontified t) 187 188 (fontified t face font-lock-string-face) 188 189 (fontified t face font-lock-string-face) 189 190 (fontified t face font-lock-string-face) 190 191 (fontified t face font-lock-string-face) 191 192 (fontified t face font-lock-string-face) 192 193 (fontified t face font-lock-string-face) 193 194 (fontified t face font-lock-string-face) 194 195 (fontified t face font-lock-string-face) 195 196 (fontified t face font-lock-string-face) 196 214 (fontified t face font-lock-string-face) 214 222 (fontified t) 222 223 (fontified t) 223 249 (fontified t) 249 250 (fontified t) 250 255 (fontified t) 255 256 (fontified t) 256 295 (fontified t) 295 296 (fontified t face font-lock-string-face) 296 297 (fontified t face font-lock-string-face) 297 298 (fontified t face font-lock-string-face) 298 299 (fontified t face font-lock-string-face) 299 300 (fontified t face font-lock-string-face) 300 301 (fontified t face font-lock-string-face) 301 302 (fontified t face font-lock-string-face) 302 303 (fontified t face font-lock-string-face) 303 304 (fontified t face font-lock-string-face) 304 317 (fontified t face font-lock-string-face) 317 325 (fontified t) 325 326 (fontified t) 326 352 (fontified t) 352 361 (fontified t) 361 366 (fontified t) 366 367 (fontified t) 367 406 (fontified t) 406 407 (fontified t face font-lock-string-face) 407 408 (fontified t face font-lock-string-face) 408 409 (fontified t face font-lock-string-face) 409 410 (fontified t face font-lock-string-face) 410 411 (fontified t face font-lock-string-face) 411 412 (fontified t face font-lock-string-face) 412 413 (fontified t face font-lock-string-face) 413 414 (fontified t face font-lock-string-face) 414 415 (fontified t face font-lock-string-face) 415 431 (fontified t face font-lock-string-face) 431 439 (fontified t) 439 440 (fontified t) 440 466 (fontified t) 466 467 (fontified t) 467 472 (fontified t) 472 473 (fontified t) 473 512 (fontified t) 512 513 (fontified t face font-lock-string-face) 513 514 (fontified t face font-lock-string-face) 514 515 (fontified t face font-lock-string-face) 515 516 (fontified t face font-lock-string-face) 516 517 (fontified t face font-lock-string-face) 517 518 (fontified t face font-lock-string-face) 518 519 (fontified t face font-lock-string-face) 519 520 (fontified t face font-lock-string-face) 520 521 (fontified t face font-lock-string-face) 521 523 (fontified t face font-lock-string-face) 523 547 (fontified t face font-lock-string-face) 547 550 (fontified t) 550 555 (fontified t) 555 556 (fontified t) 556 580 (fontified t) 580 581 (rear-nonsticky t fontified t)) . 1384) (undo-tree-id1005 . -581) (undo-tree-id1006 . -40) (undo-tree-id1007 . -40) (undo-tree-id1008 . -40) (undo-tree-id1009 . -40) (undo-tree-id1010 . -40) (undo-tree-id1011 . -40) (undo-tree-id1012 . -40) (undo-tree-id1013 . -40) (undo-tree-id1014 . -40) (undo-tree-id1015 . -581) (undo-tree-id1016 . -94) (undo-tree-id1017 . -94) (undo-tree-id1018 . -550) (undo-tree-id1019 . -550) (undo-tree-id1020 . -467) (undo-tree-id1021 . -467) (undo-tree-id1022 . -466) (undo-tree-id1023 . -466) (undo-tree-id1024 . -434) (undo-tree-id1025 . -434) (undo-tree-id1026 . -361) (undo-tree-id1027 . -361) (undo-tree-id1028 . -352) (undo-tree-id1029 . -352) (undo-tree-id1030 . -320) (undo-tree-id1031 . -320) (undo-tree-id1032 . -250) (undo-tree-id1033 . -250) (undo-tree-id1034 . -249) (undo-tree-id1035 . -249) (undo-tree-id1036 . -217) (undo-tree-id1037 . -217) (undo-tree-id1038 . -142) (undo-tree-id1039 . -142) (undo-tree-id1040 . -141) (undo-tree-id1041 . -141) (undo-tree-id1042 . -109) (undo-tree-id1043 . -109) (undo-tree-id1044 . -40) (undo-tree-id1045 . -40) (undo-tree-id1046 . -94) (undo-tree-id1047 . -94) (undo-tree-id1048 . -86) (undo-tree-id1049 . -581) (undo-tree-id1050 . -581) (undo-tree-id1051 . -581) (t 25174 27097 308893 905000)) nil (25174 27118 935787 622000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1379) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (#(" " 0 1 (fontified t)) . -1380) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#(" " 0 1 (fontified t)) . -1381) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#(" " 0 1 (fontified t)) . -1382) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (#("
" 0 1 (fontified t)) . -1383) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) 1384) nil (25174 27118 935701 309000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1377) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1378) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1379) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1380) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1381) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1382) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1383) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1384) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -1385) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#("	" 0 1 (fontified nil)) . 1386) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (1378 . 1386) 1379) nil (25174 27118 935244 614000) 0 nil])
([nil nil ((219 . 224) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 218) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (217 . 224)) nil (25174 27118 934421 746000) 0 nil])
([nil nil ((218 . 223)) nil (25174 27118 934400 316000) 0 nil])
([nil nil ((nil fontified nil 798 . 799) (nil fontified nil 774 . 798) (nil fontified nil 773 . 774) (nil fontified nil 768 . 773) (nil fontified nil 765 . 768) (nil fontified nil 741 . 765) (nil fontified nil 739 . 741) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 691 . 730) (nil fontified nil 690 . 691) (nil fontified nil 685 . 690) (nil fontified nil 684 . 685) (nil fontified nil 658 . 684) (nil fontified nil 657 . 658) (nil fontified nil 649 . 657) (nil fontified nil 633 . 649) (nil fontified nil 632 . 633) (nil fontified nil 631 . 632) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 627 . 628) (nil fontified nil 626 . 627) (nil fontified nil 625 . 626) (nil fontified nil 624 . 625) (nil fontified nil 585 . 624) (nil fontified nil 584 . 585) (nil fontified nil 579 . 584) (nil fontified nil 570 . 579) (nil fontified nil 544 . 570) (nil fontified nil 543 . 544) (nil fontified nil 535 . 543) (nil fontified nil 522 . 535) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 474 . 513) (nil fontified nil 473 . 474) (nil fontified nil 468 . 473) (nil fontified nil 467 . 468) (nil fontified nil 441 . 467) (nil fontified nil 440 . 441) (nil fontified nil 432 . 440) (nil fontified nil 414 . 432) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 409 . 410) (nil fontified nil 408 . 409) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 405 . 406) (nil fontified nil 366 . 405) (nil fontified nil 365 . 366) (nil fontified nil 360 . 365) (nil fontified nil 359 . 360) (nil fontified nil 333 . 359) (nil fontified nil 332 . 333) (nil fontified nil 327 . 332) (nil fontified nil 324 . 327) (nil fontified nil 313 . 324) (nil fontified nil 312 . 313) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 264 . 303) (nil fontified nil 263 . 264) (nil fontified nil 259 . 263) (nil fontified nil 258 . 259) (nil fontified nil 257 . 258) (nil fontified nil 226 . 257) (nil fontified nil 224 . 226) (nil fontified nil 223 . 224) (nil fontified nil 218 . 223) (218 . 799)) nil (25174 27118 934383 543000) 0 nil])
([nil nil ((#("FROM" 0 4 (fontified t face font-lock-string-face)) . 411) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 519) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 630) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 736) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . -313) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (415 . 419) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 415) (523 . 527) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 523) (634 . 638) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 634) (740 . 744) (#("FROM" 0 1 (fontified t face font-lock-string-face) 1 4 (fontified t face font-lock-string-face)) . 740) 317 (t 25174 27118 943754 131000)) nil (25174 27173 308044 538000) 0 nil])
([nil nil ((416 . 421) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 416) (524 . 529) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 524) (635 . 640) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 635) (741 . 746) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 741) (317 . 318) (415 . 419) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 415) (523 . 527) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 523) (634 . 638) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 634) (740 . 744) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 740) (415 . 419) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 415) (522 . 526) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 522) (632 . 636) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 632) (737 . 741) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 737) (316 . 317) (414 . 417) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 414) (521 . 524) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 521) (631 . 634) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 631) (736 . 739) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 736) (414 . 417) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 414) (520 . 523) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 520) (629 . 632) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 629) (733 . 736) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 733) (315 . 316) (413 . 415) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 413) (519 . 521) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 519) (628 . 630) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 628) (732 . 734) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 732) (413 . 415) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 413) (518 . 520) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 518) (626 . 628) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 626) (729 . 731) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 729) (314 . 315) (412 . 413) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 412) (517 . 518) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 517) (625 . 626) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 625) (728 . 729) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 728) (412 . 413) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 412) (517 . 518) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 517) (625 . 626) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 625) (728 . 729) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 728) (412 . 413) (516 . 517) (623 . 624) (725 . 726) (313 . 314)) nil (25174 27173 308001 958000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -687) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) 688 (t 25174 27173 313934 749000)) nil (25174 27307 934018 760000) 0 nil])
([nil current ((687 . 693)) nil (25174 27307 933981 6000) 0 nil])
nil
