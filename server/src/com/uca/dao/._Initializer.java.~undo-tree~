(undo-tree-save-format-version . 1)
"021c6657e1c0c55500d2a579f0fef14b78f37911"
[nil nil nil nil (25173 57900 129041 216000) 0 nil]
([nil nil ((1845 . 1850) (#("	    " 0 5 (clang-format+-chg chg fontified nil)) . 1844) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (1843 . 1850) (t 25173 29111 818629 345000)) nil (25173 57900 129039 222000) 0 nil])
([nil nil ((1844 . 1849)) nil (25173 57900 129035 275000) 0 nil])
([nil nil ((1849 . 1851)) nil (25173 57900 129034 73000) 0 nil])
([nil nil ((#("a" 0 1 (clang-format+-chg chg fontified t)) . -1850) (undo-tree-id48 . -1) 1851) nil (25173 57900 129032 369000) 0 nil])
([nil nil ((1850 . 1867)) nil (25173 57900 129029 845000) 0 nil])
([nil nil ((#("x" 0 1 (clang-format+-chg chg fontified t)) . -1866) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) 1867) nil (25173 57900 129027 851000) 0 nil])
([nil nil ((#("c" 0 1 (clang-format+-chg chg fontified t)) . -1861) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (#("o" 0 1 (clang-format+-chg chg fontified t)) . -1862) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -1863) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -1864) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t)) . -1865) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 1866) nil (25173 57900 129020 757000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1945 . 1946) (nil fontified nil 1944 . 1946) (nil fontified nil 1889 . 1944) (nil fontified nil 1861 . 1889) (1861 . 1946)) nil (25173 57900 129004 316000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1902) (undo-tree-id23 . -1) (#("l" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1903) (undo-tree-id24 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1904) (undo-tree-id25 . -1) (#("v" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1905) (undo-tree-id26 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1906) (undo-tree-id27 . -1) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1907) (undo-tree-id28 . -1) 1908) nil (25173 57900 128999 658000) 0 nil])
([nil nil ((1902 . 1911)) nil (25173 57900 128991 602000) 0 nil])
([nil nil ((#("f" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1912) (undo-tree-id14 . -1) (#("i" 0 1 (face font-lock-string-face fontified nil clang-format+-chg chg)) . -1913) (undo-tree-id15 . -1) (#("r" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1914) (undo-tree-id16 . -1) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1915) (undo-tree-id17 . -1) (#("t" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1916) (undo-tree-id18 . -1) (#("n" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1917) (undo-tree-id19 . -1) (#("a" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1918) (undo-tree-id20 . -1) (#("m" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1919) (undo-tree-id21 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -1920) (undo-tree-id22 . -1) 1921) nil (25173 57900 128987 364000) 0 nil])
([nil nil ((1912 . 1917)) nil (25173 57900 128975 51000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("m" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("a" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("n" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("t" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("a" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1919) (#("l" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . 1919)) nil (25173 57900 128971 484000) 0 nil])
([nil nil ((1919 . 1930)) nil (25173 57900 128968 689000) 0 nil])
([nil nil ((1950 . 1955) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 1949) (undo-tree-id13 . -5) (1954 . 1955)) nil (25173 57900 128966 936000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2080 . 2081) (nil fontified nil 2035 . 2081) (nil fontified nil 2028 . 2035) (nil fontified nil 1992 . 2028) (nil fontified nil 1990 . 1992) (nil fontified nil 1984 . 1990) (nil fontified nil 1971 . 1984) (nil fontified nil 1949 . 1971) (1949 . 2081)) nil (25173 57900 128963 910000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2077) (undo-tree-id9 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -2078) (undo-tree-id10 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -2079) (undo-tree-id11 . -1) (#(" " 0 1 (rear-nonsticky t fontified t clang-format+-chg chg)) . -2080) (undo-tree-id12 . -1) 2081) nil (25173 57900 128959 562000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -2076) (undo-tree-id5 . -1) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . -2077) (undo-tree-id6 . -1) (#("	" 0 1 (fontified nil clang-format+-chg chg)) . 2078) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (2076 . 2078) 2077) nil (25173 57900 128952 669000) 0 nil])
([nil nil ((#("o" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1985) (#("z" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1985) (#("n" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 1985) (#("E" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . 1985)) nil (25173 57900 128944 854000) 0 nil])
([nil nil ((1985 . 1990)) nil (25173 57900 128942 760000) 0 nil])
([nil nil ((#("D" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2030) (undo-tree-id0 . -1) (#("u" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2031) (undo-tree-id1 . -1) (#("r" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2032) (undo-tree-id2 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2033) (undo-tree-id3 . -1) (#("l" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -2034) (undo-tree-id4 . -1) 2035) nil (25173 57900 128939 83000) 0 nil])
([nil nil ((2030 . 2040)) nil (25173 57900 128900 981000) 0 nil])
([nil nil ((970 . 971) (#(")" 0 1 (clang-format+-chg chg face font-lock-string-face fontified nil)) . -970) (970 . 971) (t 25173 57900 127565 945000)) nil (25173 58391 347399 195000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face clang-format+-chg chg fontified t)) . -970) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 971) nil (25173 58391 347396 330000) 0 nil])
([nil nil ((970 . 971) (#(")" 0 1 (clang-format+-chg chg face font-lock-string-face fontified nil)) . -970) (970 . 971)) nil (25173 58391 347388 445000) 0 nil])
([nil nil ((#(")" 0 1 (face font-lock-string-face fontified t)) . -969) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#(")" 0 1 (face font-lock-string-face clang-format+-chg chg fontified t)) . -970) (undo-tree-id54 . -1) (undo-tree-id55 . -1) 971) nil (25173 58391 347384 908000) 0 nil])
([nil nil ((969 . 970) (#(")" 0 1 (clang-format+-chg chg face font-lock-string-face fontified nil)) . -969) (969 . 970)) nil (25173 58631 425888 907000) 0 nil])
([nil nil ((982 . 983) (t 25173 58391 342717 351000)) nil (25173 58649 961198 739000) 0 nil] [nil nil ((1001 . 1005) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (1000 . 1001) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (957 . 969) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (956 . 957) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 986 . 987) (nil syntax-table nil 983 . 984) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 956) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (879 . 891) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 975 . 976) (nil syntax-table nil 972 . 973) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (878 . 879) (#(" " 0 1 (face font-lock-string-face fontified nil)) . 878) (975 . 976) (t 25173 58391 342717 351000)) ((#("
" 0 1 (face font-lock-warning-face clang-format+-chg chg fontified nil)) . 975) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (nil clang-format+-chg delete 879 . 880) (878 . 879) (#("
" 0 1 (face font-lock-warning-face clang-format+-chg chg fontified nil)) . 878) (nil syntax-table nil 975 . 976) (nil syntax-table nil 972 . 973) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 972 . 973) (nil syntax-table nil 975 . 976) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 984 . 985) (nil syntax-table nil 987 . 988) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil clang-format+-chg delete 957 . 958) (956 . 957) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 986 . 987) (nil syntax-table nil 983 . 984) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 983 . 984) (nil syntax-table nil 986 . 987) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#("
" 0 1 (clang-format+-chg chg fontified nil)) . 956) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 987 . 988) (nil syntax-table nil 984 . 985) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table nil 984 . 985) (nil syntax-table nil 987 . 988) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 957) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 999 . 1000) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 996 . 997) (nil syntax-table nil 999 . 1000) (#("	" 0 1 (fontified nil clang-format+-chg chg)) . 1000) (undo-tree-id60 . -1) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852) (nil syntax-table (15) 851 . 852) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 999 . 1000) (nil syntax-table nil 851 . 852) (nil syntax-table nil 878 . 879) (nil syntax-table nil 996 . 997) (nil syntax-table nil 999 . 1000) (#("    " 0 4 (fontified t clang-format+-chg chg)) . 1001) (undo-tree-id61 . -4) (nil syntax-table (15) 999 . 1000) (nil syntax-table (15) 996 . 997) (nil syntax-table (15) 878 . 879) (nil syntax-table (15) 851 . 852) (nil syntax-table nil 999 . 1000) (nil syntax-table nil 996 . 997) (nil syntax-table nil 878 . 879) (nil syntax-table nil 851 . 852)) (25173 58631 420509 211000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-type-face c-type c-decl-id-start clang-format+-chg chg fontified t)) . -982) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 983) nil (25173 58649 961196 795000) 0 nil])
nil
([nil nil ((977 . 982) (#("      " 0 1 (clang-format+-chg delete fontified nil) 1 6 (fontified nil)) . 977) (#("      " 0 6 (fontified nil)) . 976) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (982 . 983)) nil (25173 58649 961191 806000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1006 . 1007) (nil fontified nil 976 . 1007) (976 . 1007)) nil (25173 58649 961186 877000) 0 nil])
([nil nil ((800 . 805) (#("            " 0 12 (fontified nil)) . 799) (undo-tree-id63 . -12) (811 . 812)) nil (25173 58649 961184 342000) 0 nil])
([nil nil ((nil rear-nonsticky nil 829 . 830) (nil fontified nil 799 . 830) (799 . 830)) nil (25173 58649 961180 565000) 0 nil])
([nil nil ((631 . 632)) nil (25173 58649 961178 922000) 0 nil])
([nil nil ((nil rear-nonsticky nil 661 . 662) (nil fontified nil 631 . 662) (631 . 662)) nil (25173 58649 961177 339000) 0 nil])
([nil nil ((426 . 432)) nil (25173 58649 961174 794000) 0 nil])
([nil nil ((nil rear-nonsticky nil 462 . 463) (nil fontified nil 432 . 463) (432 . 463)) nil (25173 58649 961171 938000) 0 nil])
([nil nil ((427 . 432) (#("	    	    " 0 5 (clang-format+-chg chg fontified t) 5 10 (fontified t clang-format+-chg chg)) . 427) (undo-tree-id62 . -5) 463) nil (25173 58649 961165 476000) 0 nil])
([nil nil ((2198 . 2203) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 2197) (undo-tree-id1 . -5) (undo-tree-id2 . -5) (2196 . 2203) (t 25173 58649 966482 543000)) nil (25174 26541 81953 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2435 . 2436) (nil fontified nil 2398 . 2436) (nil fontified nil 2395 . 2398) (nil fontified nil 2383 . 2395) (nil fontified nil 2347 . 2383) (nil fontified nil 2345 . 2347) (nil fontified nil 2338 . 2345) (nil fontified nil 2317 . 2338) (nil fontified nil 2300 . 2317) (nil fontified nil 2243 . 2300) (nil fontified nil 2198 . 2243) (2198 . 2436)) nil (25174 26541 81945 555000) 0 nil])
([nil nil ((2297 . 2298)) nil (25174 26541 578120 246000) 0 nil])
([nil nil ((2298 . 2300)) nil (25174 26606 933672 184000) 0 nil] [nil nil ((2311 . 2312) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2256 . 2268) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2304 . 2305) (nil syntax-table nil 2301 . 2302) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2255 . 2256) (#(" " 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 2255) (2298 . 2299)) ((#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2298) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (2255 . 2256) (#("
" 0 1 (clang-format+-chg chg fontified nil face font-lock-warning-face)) . 2255) (undo-tree-id11 . -1) (nil syntax-table nil 2304 . 2305) (nil syntax-table nil 2301 . 2302) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2301 . 2302) (nil syntax-table nil 2304 . 2305) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("?" 0 1 (fontified t)) . 2311) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) (25174 26541 228701 91000) 0 nil])
([nil nil ((2300 . 2301)) nil (25174 26606 933670 392000) 0 nil])
([nil nil ((2262 . 2266) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2312 . 2313) (nil syntax-table nil 2309 . 2310) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2256 . 2262) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2306 . 2307) (nil syntax-table nil 2303 . 2304) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("            " 0 12 (clang-format+-chg chg fontified nil)) . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2318 . 2319) (nil syntax-table nil 2315 . 2316) (nil syntax-table nil 2255 . 2256) (nil syntax-table (1) 2243 . 2244) (2312 . 2313) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table (1) 2243 . 2244)) ((nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("," 0 1 (clang-format+-chg chg fontified nil)) . 2312) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2318 . 2319) (nil syntax-table nil 2315 . 2316) (nil syntax-table nil 2255 . 2256) (nil syntax-table (1) 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2315 . 2316) (nil syntax-table nil 2318 . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil clang-format+-chg delete 2268 . 2269) (2256 . 2268) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2306 . 2307) (nil syntax-table nil 2303 . 2304) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2303 . 2304) (nil syntax-table nil 2306 . 2307) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("						" 0 6 (clang-format+-chg chg fontified nil)) . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2312 . 2313) (nil syntax-table nil 2309 . 2310) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2309 . 2310) (nil syntax-table nil 2312 . 2313) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("    " 0 4 (clang-format+-chg chg fontified t)) . 2262) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) (25174 26541 88937 244000) 0 nil])
([nil nil ((2301 . 2303)) nil (25174 26606 933668 610000) 0 nil])
([nil nil ((2319 . 2329) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2318 . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2326 . 2327) (nil syntax-table nil 2323 . 2324) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2318) (undo-tree-id0 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2283 . 2293) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2282 . 2283) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2282) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (2311 . 2312) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) ((nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . 2311) (undo-tree-id3 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil clang-format+-chg delete 2283 . 2284) (2282 . 2283) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2313 . 2314) (nil syntax-table nil 2316 . 2317) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("
" 0 1 (clang-format+-chg chg fontified nil)) . 2282) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2314 . 2315) (nil syntax-table nil 2317 . 2318) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("						    " 0 10 (clang-format+-chg chg fontified nil)) . 2283) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil clang-format+-chg delete 2319 . 2320) (2318 . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2326 . 2327) (nil syntax-table nil 2323 . 2324) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2323 . 2324) (nil syntax-table nil 2326 . 2327) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("
" 0 1 (clang-format+-chg chg fontified nil)) . 2318) (undo-tree-id4 . -1) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table nil 2324 . 2325) (nil syntax-table nil 2327 . 2328) (nil syntax-table nil 2243 . 2244) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244) (#("						    " 0 10 (clang-format+-chg chg fontified t)) . 2319) (nil syntax-table nil 2243 . 2244) (nil syntax-table (15) 2255 . 2256) (nil syntax-table (15) 2243 . 2244) (nil syntax-table nil 2337 . 2338) (nil syntax-table nil 2334 . 2335) (nil syntax-table nil 2255 . 2256) (nil syntax-table nil 2243 . 2244)) (25174 26541 81901 239000) 0 nil])
([nil nil ((2303 . 2304)) nil (25174 26606 933666 628000) 0 nil])
nil
([nil nil ((2304 . 2306)) nil (25174 26606 933664 796000) 0 nil])
([nil nil ((#("1" 0 1 (clang-format+-chg chg fontified t)) . -2344) (undo-tree-id34 . -1) 2345) nil (25174 26606 933662 513000) 0 nil])
([nil nil ((2344 . 2345)) nil (25174 26606 933658 379000) 0 nil])
([nil nil ((#("S" 0 1 (clang-format+-chg chg fontified t)) . -2337) (undo-tree-id28 . -1) (#("t" 0 1 (clang-format+-chg chg fontified t)) . -2338) (undo-tree-id29 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t)) . -2339) (undo-tree-id30 . -1) (#("i" 0 1 (clang-format+-chg chg fontified t)) . -2340) (undo-tree-id31 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -2341) (undo-tree-id32 . -1) (#("g" 0 1 (clang-format+-chg chg fontified t)) . -2342) (undo-tree-id33 . -1) 2343) nil (25174 26606 933653 363000) 0 nil])
([nil nil ((2337 . 2340)) nil (25174 26606 933641 700000) 0 nil])
([nil nil ((#("R" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2345) (undo-tree-id23 . -1) (#("o" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2346) (undo-tree-id24 . -1) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2347) (undo-tree-id25 . -1) (#("g" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2348) (undo-tree-id26 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2349) (undo-tree-id27 . -1) 2350) nil (25174 26606 933636 995000) 0 nil])
([nil nil ((#("\"" 0 1 (clang-format+-chg chg fontified t face font-lock-warning-face)) . -2344) (undo-tree-id21 . -1) (nil syntax-table nil 2347 . 2348) (nil syntax-table (1) 2344 . 2345) (#("\"" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . -2345) (undo-tree-id22 . -1) 2346) nil (25174 26606 933625 162000) 0 nil])
([nil nil ((2344 . 2345)) nil (25174 26606 933618 775000) 0 nil])
([nil nil ((#("\"" 0 1 (clang-format+-chg delete fontified t face font-lock-warning-face)) . 2383) (nil syntax-table nil 2386 . 2387) (nil syntax-table (1) 2383 . 2384) (#("s" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2387 . 2388) (nil syntax-table (1) 2384 . 2385) (#("e" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2388 . 2389) (nil syntax-table (1) 2385 . 2386) (#("g" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2389 . 2390) (nil syntax-table (1) 2386 . 2387) (#("a" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2390 . 2391) (nil syntax-table (1) 2387 . 2388) (#("d" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2391 . 2392) (nil syntax-table (1) 2388 . 2389) (#("r" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2392 . 2393) (nil syntax-table (1) 2389 . 2390) (#("a" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2393 . 2394) (nil syntax-table (1) 2390 . 2391) (#("v" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2394 . 2395) (nil syntax-table (1) 2391 . 2392) (#("a" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2395 . 2396) (nil syntax-table (1) 2392 . 2393) (#("B" 0 1 (clang-format+-chg delete fontified t)) . 2383) (nil syntax-table nil 2396 . 2397) (nil syntax-table (1) 2393 . 2394) (#("\"" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 2383)) nil (25174 26606 933609 985000) 0 nil])
([nil nil ((2383 . 2384)) nil (25174 26606 933597 802000) 0 nil])
([nil nil ((#("S" 0 1 (clang-format+-chg chg fontified t)) . -2373) (undo-tree-id15 . -1) (#("t" 0 1 (clang-format+-chg chg fontified t)) . -2374) (undo-tree-id16 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t)) . -2375) (undo-tree-id17 . -1) (#("i" 0 1 (clang-format+-chg chg fontified t)) . -2376) (undo-tree-id18 . -1) (#("n" 0 1 (clang-format+-chg chg fontified t)) . -2377) (undo-tree-id19 . -1) (#("g" 0 1 (clang-format+-chg chg fontified t)) . -2378) (undo-tree-id20 . -1) 2379) nil (25174 26606 933591 885000) 0 nil])
([nil nil ((2373 . 2376)) nil (25174 26606 933552 622000) 0 nil])
([nil nil ((2383 . 2389) (t 25174 26606 968811 249000)) nil (25174 26690 102199 421000) 0 nil])
([nil nil ((2389 . 2391)) nil (25174 26690 102196 427000) 0 nil])
([nil nil ((2391 . 2405)) nil (25174 26690 102194 264000) 0 nil])
([nil nil ((2405 . 2407)) nil (25174 26690 102191 911000) 0 nil])
([nil nil ((2406 . 2407)) nil (25174 26690 102189 868000) 0 nil])
([nil nil ((2407 . 2408)) nil (25174 26690 102187 986000) 0 nil])
([nil nil ((2408 . 2410)) nil (25174 26690 102185 682000) 0 nil])
([nil nil ((2411 . 2412)) nil (25174 26690 102183 910000) 0 nil])
([nil nil ((2412 . 2418)) nil (25174 26690 102181 887000) 0 nil])
([nil nil ((2418 . 2427)) nil (25174 26690 102179 935000) 0 nil])
([nil nil ((2427 . 2437)) nil (25174 26690 102178 162000) 0 nil])
([nil nil ((2437 . 2439)) nil (25174 26690 102176 300000) 0 nil])
([nil nil ((2438 . 2439)) nil (25174 26690 102173 576000) 0 nil])
([nil nil ((2439 . 2440)) nil (25174 26690 102170 972000) 0 nil])
([nil nil ((2442 . 2443) (nil syntax-table nil 2443 . 2444) (nil syntax-table (1) 2441 . 2442) (2441 . 2442) (#("\"" 0 1 (clang-format+-chg chg fontified nil)) . -2441) (nil syntax-table nil 2443 . 2444) (nil syntax-table (1) 2441 . 2442) (2440 . 2442)) nil (25174 26690 102167 598000) 0 nil])
([nil nil ((2442 . 2444)) nil (25174 26690 102163 352000) 0 nil])
([nil nil ((2444 . 2445)) nil (25174 26690 102161 470000) 0 nil])
([nil nil ((2445 . 2447)) nil (25174 26690 102158 886000) 0 nil])
([nil nil ((2447 . 2448)) nil (25174 26690 102156 62000) 0 nil])
([nil nil ((2448 . 2450)) nil (25174 26690 102147 100000) 0 nil])
([nil nil ((2452 . 2453) (t 25174 26690 139370 615000)) nil (25174 26743 826830 764000) 0 nil])
([nil nil ((2453 . 2459)) nil (25174 26743 826828 548000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2493 . 2494) (nil fontified nil 2493 . 2494) (nil fontified nil 2492 . 2493) (nil fontified nil 2491 . 2492) (nil fontified nil 2490 . 2491) (nil fontified nil 2489 . 2490) (nil fontified nil 2488 . 2489) (nil fontified nil 2487 . 2488) (nil fontified nil 2486 . 2487) (nil fontified nil 2485 . 2486) (nil fontified nil 2484 . 2485) (nil fontified nil 2483 . 2484) (nil fontified nil 2482 . 2483) (nil fontified nil 2481 . 2482) (nil fontified nil 2480 . 2481) (nil fontified nil 2479 . 2480) (nil fontified nil 2478 . 2479) (nil fontified nil 2477 . 2478) (nil fontified nil 2476 . 2477) (nil fontified nil 2475 . 2476) (nil fontified nil 2474 . 2475) (nil fontified nil 2473 . 2474) (nil fontified nil 2472 . 2473) (nil fontified nil 2471 . 2472) (nil fontified nil 2470 . 2471) (nil fontified nil 2469 . 2470) (nil fontified nil 2468 . 2469) (nil fontified nil 2467 . 2468) (nil fontified nil 2466 . 2467) (nil fontified nil 2465 . 2466) (nil fontified nil 2464 . 2465) (nil fontified nil 2463 . 2464) (nil fontified nil 2462 . 2463) (nil fontified nil 2461 . 2462) (nil fontified nil 2460 . 2461) (nil fontified nil 2459 . 2460) (nil fontified nil 2454 . 2459) (2454 . 2494)) nil (25174 26743 826823 566000) 0 nil])
([nil nil ((#("4" 0 1 (clang-format+-chg chg fontified t)) . -2479) (undo-tree-id36 . -1) 2480) nil (25174 26743 826809 29000) 0 nil])
([nil nil ((2479 . 2480)) nil (25174 26743 826803 987000) 0 nil])
([nil nil ((#("2" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("1" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("/" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("1" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("3" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("/" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("0" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 2483) (#("1" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 2483)) nil (25174 26743 826798 192000) 0 nil])
([nil nil ((2483 . 2504)) nil (25174 26743 826793 370000) 0 nil])
([nil nil ((2504 . 2505)) nil (25174 26743 826791 395000) 0 nil])
([nil nil ((#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2504) (undo-tree-id35 . -1) 2505) nil (25174 26743 826787 556000) 0 nil])
([nil nil ((2504 . 2507)) nil (25174 26743 826763 556000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . -2506) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) 2507 (t 25174 26743 836223 219000)) nil (25174 26745 802563 823000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2554) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#(" " 0 1 (fontified t)) . -2555) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (#(" " 0 1 (fontified t)) . -2556) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#(" " 0 1 (fontified t)) . -2557) (undo-tree-id55 . -1) 2558 (t 25174 26745 813403 522000)) nil (25174 26749 103738 795000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2553) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -2554) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("	" 0 1 (fontified nil)) . 2555) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (2553 . 2555) 2554) nil (25174 26749 103718 166000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2510) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (#(" " 0 1 (fontified t)) . -2511) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (#(" " 0 1 (fontified t)) . -2512) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#(" " 0 1 (fontified t)) . -2513) (undo-tree-id69 . -1) 2514 (t 25174 26749 139214 869000)) nil (25174 26752 54868 494000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2509) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -2510) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("	" 0 1 (fontified nil)) . 2511) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (2509 . 2511) 2510) nil (25174 26752 54847 154000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1952) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (#(" " 0 1 (fontified t)) . -1953) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(" " 0 1 (fontified t)) . -1954) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#(" " 0 1 (fontified t)) . -1955) (undo-tree-id83 . -1) 1956 (t 25174 26752 64642 289000)) nil (25174 26762 108738 643000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -1951) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -1952) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("	" 0 1 (fontified nil)) . 1953) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (1951 . 1953) 1952) nil (25174 26762 108714 901000) 0 nil])
([nil nil ((2260 . 2270) (t 25174 26762 144553 947000)) nil (25174 26887 88085 726000) 0 nil])
([nil nil ((2270 . 2271) (t 25174 26887 92718 197000)) nil (25174 26889 611451 589000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2270) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 2271) nil (25174 26889 611443 765000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -2271) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2272) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -2273) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2274) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -2275) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (#("," 0 1 (fontified t face font-lock-string-face)) . -2276) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -2277) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -2278) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -2279) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -2280) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -2281) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -2282) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2283) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("p" 0 1 (fontified t face font-lock-string-face)) . -2284) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -2285) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -2286) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -2287) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -2288) (undo-tree-id222 . -1) 2289 (t 25174 26889 620575 496000)) nil (25174 26955 987615 178000) 0 nil])
([nil nil ((2271 . 2281)) nil (25174 26955 987310 845000) 0 nil])
([nil nil ((2281 . 2282)) nil (25174 26955 987309 21000) 0 nil])
([nil nil ((2282 . 2290)) nil (25174 26955 987307 178000) 0 nil])
([nil nil ((2290 . 2291)) nil (25174 26955 987305 365000) 0 nil])
([nil nil ((2291 . 2303)) nil (25174 26955 987303 371000) 0 nil])
([nil nil ((2303 . 2304)) nil (25174 26955 987301 488000) 0 nil])
([nil nil ((2304 . 2309)) nil (25174 26955 987299 574000) 0 nil])
([nil nil ((2309 . 2310)) nil (25174 26955 987297 551000) 0 nil])
([nil nil ((2310 . 2315)) nil (25174 26955 987294 876000) 0 nil])
([nil nil ((2315 . 2319)) nil (25174 26955 987286 250000) 0 nil])
([nil nil ((#("	    // TODO" 0 1 (fontified t c-is-sws t) 1 5 (fontified t c-in-sws t) 5 8 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 8 12 (fontified t face font-lock-comment-face c-in-sws t)) . 1424) (undo-tree-id226 . -12) (undo-tree-id227 . -12) (undo-tree-id228 . -12) (undo-tree-id229 . -12) (undo-tree-id230 . -12) (undo-tree-id231 . -12) (undo-tree-id232 . -12) (undo-tree-id233 . -12) (undo-tree-id234 . -12) 1436 (t 25174 26955 996835 989000)) nil (25174 27097 272539 553000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1984 . 1985) (nil fontified nil 1433 . 1985) (nil fontified nil 1432 . 1433) (nil fontified nil 1425 . 1432) (nil fontified nil 1424 . 1425) (1424 . 1985)) nil (25174 27097 272519 968000) 0 nil])
([nil nil ((1924 . 1929) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1924) (1843 . 1848) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1843) (1810 . 1815) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1810) (1739 . 1744) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1739) (1698 . 1703) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1698) (1630 . 1635) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1630) (1597 . 1602) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1597) (1524 . 1529) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1524) (1491 . 1496) (#("        " 0 8 (clang-format+-chg chg fontified t)) . 1491) (1424 . 1429) (#("        " 0 1 (c-is-sws t c-in-sws t clang-format+-chg chg fontified t) 1 8 (c-is-sws t c-in-sws t clang-format+-chg chg fontified t)) . 1424)) nil (25174 27097 272511 252000) 0 nil])
([nil nil ((#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1564) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1670) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1779) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1883) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . -1470) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (1570 . 1576) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1570) (1676 . 1682) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1676) (1785 . 1791) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1785) (1889 . 1895) (#("DELETE" 0 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1889) 1476) nil (25174 27097 272500 151000) 0 nil])
([nil nil ((1569 . 1574) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1673 . 1678) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1673) (1780 . 1785) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1780) (1882 . 1887) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1882) (1474 . 1475) (1568 . 1572) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1672 . 1676) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1672) (1779 . 1783) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1779) (1881 . 1885) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1881) (1568 . 1572) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1671 . 1675) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1671) (1777 . 1781) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1777) (1878 . 1882) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1878) (1473 . 1474) (1567 . 1570) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1567) (1670 . 1673) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1670) (1776 . 1779) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1776) (1877 . 1880) (#("TRU" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1877) (1567 . 1570) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1567) (1669 . 1672) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1669) (1774 . 1777) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1774) (1874 . 1877) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1874) (1472 . 1473) (1566 . 1568) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1566) (1668 . 1670) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1668) (1773 . 1775) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1773) (1873 . 1875) (#("TR" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1873) (1566 . 1568) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1566) (1667 . 1669) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1667) (1771 . 1773) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1771) (1870 . 1872) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1870) (1471 . 1472) (1565 . 1566) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1565) (1666 . 1667) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1666) (1770 . 1771) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1770) (1869 . 1870) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1869) (1565 . 1566) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1565) (1666 . 1667) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1666) (1770 . 1771) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1770) (1869 . 1870) (#("T" 0 1 (clang-format+-chg chg fontified nil face font-lock-string-face)) . 1869) (1565 . 1566) (1665 . 1666) (1768 . 1769) (1866 . 1867) (1470 . 1471)) nil (25174 27097 272475 426000) 0 nil])
([nil nil ((1568 . 1572) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1673 . 1677) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1673) (1781 . 1785) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1781) (1884 . 1888) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1884) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -1474) (undo-tree-id223 . -1) (1569 . 1574) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1674 . 1679) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1674) (1782 . 1787) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1782) (1885 . 1890) (#("TRUNT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1885) 1475) nil (25174 27097 272444 951000) 0 nil])
([nil nil ((1572 . 1580) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1572) (1679 . 1687) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1679) (1789 . 1797) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1789) (1894 . 1902) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1894) (1477 . 1478) (1571 . 1578) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1571) (1678 . 1685) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1678) (1788 . 1795) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1788) (1893 . 1900) (#("TRUNCAT" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face) 6 7 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1893) (1571 . 1578) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1571) (1677 . 1684) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1677) (1786 . 1793) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1786) (1890 . 1897) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1890) (1476 . 1477) (1570 . 1576) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1570) (1676 . 1682) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1676) (1785 . 1791) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1785) (1889 . 1895) (#("TRUNCA" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face) 5 6 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1889) (1570 . 1576) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1570) (1675 . 1681) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1675) (1783 . 1789) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1783) (1886 . 1892) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1886) (1475 . 1476) (1569 . 1574) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1674 . 1679) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1674) (1782 . 1787) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1782) (1885 . 1890) (#("TRUNC" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face) 4 5 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1885) (1569 . 1574) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1569) (1673 . 1678) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1673) (1780 . 1785) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1780) (1882 . 1887) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1882) (1474 . 1475) (1568 . 1572) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1568) (1672 . 1676) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1672) (1779 . 1783) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1779) (1881 . 1885) (#("TRUN" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face) 1 2 (clang-format+-chg chg fontified t face font-lock-string-face) 2 3 (clang-format+-chg chg fontified t face font-lock-string-face) 3 4 (clang-format+-chg chg fontified t face font-lock-string-face)) . 1881) 1474) nil (25174 27097 272399 789000) 0 nil])
([nil nil ((#("	    // remove all instance in sql base
	    statement = connection.prepareStatement(\"TRUNCATE FROM users\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE FROM professeurs\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE FROM eleves\");
	    statement.executeUpdate();
        
	    statement = connection.prepareStatement(\"TRUNCATE FROM gommettes\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE FROM gommettesAttribuees\");
	    statement.executeUpdate();" 0 5 (fontified t c-in-sws t c-is-sws t) 5 6 (fontified t face font-lock-comment-delimiter-face c-in-sws t c-is-sws t) 6 8 (fontified t face font-lock-comment-delimiter-face c-in-sws t) 8 39 (fontified t face font-lock-comment-face c-in-sws t) 39 40 (fontified t face font-lock-comment-face c-in-sws t) 40 41 (fontified t c-is-sws t c-in-sws t) 41 45 (fontified t c-is-sws t c-in-sws t) 45 46 (c-is-sws t fontified t) 46 85 (fontified t) 85 86 (fontified t face font-lock-string-face) 86 87 (fontified t face font-lock-string-face) 87 88 (fontified t face font-lock-string-face) 88 89 (fontified t face font-lock-string-face) 89 90 (fontified t face font-lock-string-face) 90 91 (fontified t face font-lock-string-face) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t face font-lock-string-face) 95 106 (fontified t face font-lock-string-face) 106 109 (fontified t) 109 114 (fontified t) 114 115 (fontified t) 115 141 (fontified t) 141 142 (fontified t) 142 147 (fontified t) 147 148 (fontified t) 148 187 (fontified t) 187 188 (fontified t face font-lock-string-face) 188 189 (fontified t face font-lock-string-face) 189 190 (fontified t face font-lock-string-face) 190 191 (fontified t face font-lock-string-face) 191 192 (fontified t face font-lock-string-face) 192 193 (fontified t face font-lock-string-face) 193 194 (fontified t face font-lock-string-face) 194 195 (fontified t face font-lock-string-face) 195 196 (fontified t face font-lock-string-face) 196 214 (fontified t face font-lock-string-face) 214 222 (fontified t) 222 223 (fontified t) 223 249 (fontified t) 249 250 (fontified t) 250 255 (fontified t) 255 256 (fontified t) 256 295 (fontified t) 295 296 (fontified t face font-lock-string-face) 296 297 (fontified t face font-lock-string-face) 297 298 (fontified t face font-lock-string-face) 298 299 (fontified t face font-lock-string-face) 299 300 (fontified t face font-lock-string-face) 300 301 (fontified t face font-lock-string-face) 301 302 (fontified t face font-lock-string-face) 302 303 (fontified t face font-lock-string-face) 303 304 (fontified t face font-lock-string-face) 304 317 (fontified t face font-lock-string-face) 317 325 (fontified t) 325 326 (fontified t) 326 352 (fontified t) 352 361 (fontified t) 361 366 (fontified t) 366 367 (fontified t) 367 406 (fontified t) 406 407 (fontified t face font-lock-string-face) 407 408 (fontified t face font-lock-string-face) 408 409 (fontified t face font-lock-string-face) 409 410 (fontified t face font-lock-string-face) 410 411 (fontified t face font-lock-string-face) 411 412 (fontified t face font-lock-string-face) 412 413 (fontified t face font-lock-string-face) 413 414 (fontified t face font-lock-string-face) 414 415 (fontified t face font-lock-string-face) 415 431 (fontified t face font-lock-string-face) 431 439 (fontified t) 439 440 (fontified t) 440 466 (fontified t) 466 467 (fontified t) 467 472 (fontified t) 472 473 (fontified t) 473 512 (fontified t) 512 513 (fontified t face font-lock-string-face) 513 514 (fontified t face font-lock-string-face) 514 515 (fontified t face font-lock-string-face) 515 516 (fontified t face font-lock-string-face) 516 517 (fontified t face font-lock-string-face) 517 518 (fontified t face font-lock-string-face) 518 519 (fontified t face font-lock-string-face) 519 520 (fontified t face font-lock-string-face) 520 521 (fontified t face font-lock-string-face) 521 523 (fontified t face font-lock-string-face) 523 547 (fontified t face font-lock-string-face) 547 550 (fontified t) 550 555 (fontified t) 555 556 (fontified t) 556 580 (fontified t) 580 581 (rear-nonsticky t fontified t)) . 1384) (undo-tree-id1005 . -581) (undo-tree-id1006 . -40) (undo-tree-id1007 . -40) (undo-tree-id1008 . -40) (undo-tree-id1009 . -40) (undo-tree-id1010 . -40) (undo-tree-id1011 . -40) (undo-tree-id1012 . -40) (undo-tree-id1013 . -40) (undo-tree-id1014 . -40) (undo-tree-id1015 . -581) (undo-tree-id1016 . -94) (undo-tree-id1017 . -94) (undo-tree-id1018 . -550) (undo-tree-id1019 . -550) (undo-tree-id1020 . -467) (undo-tree-id1021 . -467) (undo-tree-id1022 . -466) (undo-tree-id1023 . -466) (undo-tree-id1024 . -434) (undo-tree-id1025 . -434) (undo-tree-id1026 . -361) (undo-tree-id1027 . -361) (undo-tree-id1028 . -352) (undo-tree-id1029 . -352) (undo-tree-id1030 . -320) (undo-tree-id1031 . -320) (undo-tree-id1032 . -250) (undo-tree-id1033 . -250) (undo-tree-id1034 . -249) (undo-tree-id1035 . -249) (undo-tree-id1036 . -217) (undo-tree-id1037 . -217) (undo-tree-id1038 . -142) (undo-tree-id1039 . -142) (undo-tree-id1040 . -141) (undo-tree-id1041 . -141) (undo-tree-id1042 . -109) (undo-tree-id1043 . -109) (undo-tree-id1044 . -40) (undo-tree-id1045 . -40) (undo-tree-id1046 . -94) (undo-tree-id1047 . -94) (undo-tree-id1048 . -86) (undo-tree-id1049 . -581) (undo-tree-id1050 . -581) (undo-tree-id1051 . -581) (t 25174 27097 308893 905000)) nil (25174 27118 935787 622000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -1379) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (#(" " 0 1 (fontified t)) . -1380) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (#(" " 0 1 (fontified t)) . -1381) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (#(" " 0 1 (fontified t)) . -1382) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (#("
" 0 1 (fontified t)) . -1383) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) 1384) nil (25174 27118 935701 309000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1377) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1378) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1379) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1380) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1381) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1382) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1383) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -1384) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -1385) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (#("	" 0 1 (fontified nil)) . 1386) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (1378 . 1386) 1379) nil (25174 27118 935244 614000) 0 nil])
([nil nil ((219 . 224) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 218) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (217 . 224)) nil (25174 27118 934421 746000) 0 nil])
([nil nil ((218 . 223)) nil (25174 27118 934400 316000) 0 nil])
([nil nil ((nil fontified nil 798 . 799) (nil fontified nil 774 . 798) (nil fontified nil 773 . 774) (nil fontified nil 768 . 773) (nil fontified nil 765 . 768) (nil fontified nil 741 . 765) (nil fontified nil 739 . 741) (nil fontified nil 738 . 739) (nil fontified nil 737 . 738) (nil fontified nil 736 . 737) (nil fontified nil 735 . 736) (nil fontified nil 734 . 735) (nil fontified nil 733 . 734) (nil fontified nil 732 . 733) (nil fontified nil 731 . 732) (nil fontified nil 730 . 731) (nil fontified nil 691 . 730) (nil fontified nil 690 . 691) (nil fontified nil 685 . 690) (nil fontified nil 684 . 685) (nil fontified nil 658 . 684) (nil fontified nil 657 . 658) (nil fontified nil 649 . 657) (nil fontified nil 633 . 649) (nil fontified nil 632 . 633) (nil fontified nil 631 . 632) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 627 . 628) (nil fontified nil 626 . 627) (nil fontified nil 625 . 626) (nil fontified nil 624 . 625) (nil fontified nil 585 . 624) (nil fontified nil 584 . 585) (nil fontified nil 579 . 584) (nil fontified nil 570 . 579) (nil fontified nil 544 . 570) (nil fontified nil 543 . 544) (nil fontified nil 535 . 543) (nil fontified nil 522 . 535) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 513 . 514) (nil fontified nil 474 . 513) (nil fontified nil 473 . 474) (nil fontified nil 468 . 473) (nil fontified nil 467 . 468) (nil fontified nil 441 . 467) (nil fontified nil 440 . 441) (nil fontified nil 432 . 440) (nil fontified nil 414 . 432) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 409 . 410) (nil fontified nil 408 . 409) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 405 . 406) (nil fontified nil 366 . 405) (nil fontified nil 365 . 366) (nil fontified nil 360 . 365) (nil fontified nil 359 . 360) (nil fontified nil 333 . 359) (nil fontified nil 332 . 333) (nil fontified nil 327 . 332) (nil fontified nil 324 . 327) (nil fontified nil 313 . 324) (nil fontified nil 312 . 313) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 264 . 303) (nil fontified nil 263 . 264) (nil fontified nil 259 . 263) (nil fontified nil 258 . 259) (nil fontified nil 257 . 258) (nil fontified nil 226 . 257) (nil fontified nil 224 . 226) (nil fontified nil 223 . 224) (nil fontified nil 218 . 223) (218 . 799)) nil (25174 27118 934383 543000) 0 nil])
([nil nil ((#("FROM" 0 4 (fontified t face font-lock-string-face)) . 411) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 519) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 630) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 736) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . -313) (undo-tree-id1052 . -4) (undo-tree-id1053 . -4) (415 . 419) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 415) (523 . 527) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 523) (634 . 638) (#("FROM" 0 4 (fontified t face font-lock-string-face)) . 634) (740 . 744) (#("FROM" 0 1 (fontified t face font-lock-string-face) 1 4 (fontified t face font-lock-string-face)) . 740) 317 (t 25174 27118 943754 131000)) nil (25174 27173 308044 538000) 0 nil])
([nil nil ((416 . 421) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 416) (524 . 529) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 524) (635 . 640) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 635) (741 . 746) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 741) (317 . 318) (415 . 419) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 415) (523 . 527) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 523) (634 . 638) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 634) (740 . 744) (#("TABL" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face) 3 4 (fontified t clang-format+-chg chg face font-lock-string-face)) . 740) (415 . 419) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 415) (522 . 526) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 522) (632 . 636) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 632) (737 . 741) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 737) (316 . 317) (414 . 417) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 414) (521 . 524) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 521) (631 . 634) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 631) (736 . 739) (#("TAB" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face) 2 3 (fontified t clang-format+-chg chg face font-lock-string-face)) . 736) (414 . 417) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 414) (520 . 523) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 520) (629 . 632) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 629) (733 . 736) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 733) (315 . 316) (413 . 415) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 413) (519 . 521) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 519) (628 . 630) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 628) (732 . 734) (#("TA" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face) 1 2 (fontified t clang-format+-chg chg face font-lock-string-face)) . 732) (413 . 415) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 413) (518 . 520) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 518) (626 . 628) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 626) (729 . 731) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 729) (314 . 315) (412 . 413) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 412) (517 . 518) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 517) (625 . 626) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 625) (728 . 729) (#("T" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . 728) (412 . 413) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 412) (517 . 518) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 517) (625 . 626) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 625) (728 . 729) (#("T" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . 728) (412 . 413) (516 . 517) (623 . 624) (725 . 726) (313 . 314)) nil (25174 27173 308001 958000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -687) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) 688 (t 25174 27173 313934 749000)) nil (25174 27307 934018 760000) 0 nil])
([nil nil ((687 . 693)) nil (25174 27307 933981 6000) 0 nil])
([nil nil ((1260 . 1261) (t 25174 27307 945937 267000)) nil (25174 30972 355861 346000) 0 nil])
([nil nil ((1261 . 1282)) nil (25174 30972 355858 672000) 0 nil])
([nil nil ((1282 . 1283)) nil (25174 30972 355856 608000) 0 nil])
([nil nil ((1283 . 1285)) nil (25174 30972 355854 134000) 0 nil])
([nil nil ((1284 . 1287)) nil (25174 30972 355845 539000) 0 nil])
([nil nil (1525) nil (25174 31751 981690 578000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face font-lock-string-face)) . -1259) (undo-tree-id1058 . -1) 1260 (t 25174 30972 368541 324000)) nil (25174 31751 981687 273000) 0 nil])
([nil nil ((1287 . 1288) (#(")" 0 1 (fontified nil face font-lock-string-face clang-format+-chg chg)) . -1287) (1287 . 1288)) nil (25174 31751 981657 6000) 0 nil])
([nil nil ((2042 . 2047) (#("            " 0 1 (c-is-sws t c-in-sws t fontified nil) 1 8 (c-in-sws t c-is-sws t fontified nil) 8 12 (c-in-sws t c-is-sws t fontified nil)) . 2041) (undo-tree-id1075 . -12) (undo-tree-id1076 . -12) (undo-tree-id1077 . -12) (2053 . 2054) (2040 . 2041) (t 25174 31751 995324 534000)) nil (25174 31845 821889 960000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2147 . 2148) (nil fontified nil 2146 . 2148) (nil fontified nil 2137 . 2146) (nil fontified nil 2092 . 2137) (nil fontified nil 2076 . 2092) (nil fontified nil 2068 . 2076) (nil fontified nil 2064 . 2068) (nil fontified nil 2053 . 2064) (nil fontified nil 2052 . 2053) (nil fontified nil 2048 . 2052) (nil fontified nil 2041 . 2048) (nil fontified nil 2040 . 2041) (2040 . 2148)) nil (25174 31845 821881 233000) 0 nil])
([nil nil ((2148 . 2154)) nil (25174 31845 821875 698000) 0 nil])
([nil nil ((2154 . 2157)) nil (25174 31845 821873 907000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2156) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) 2157) nil (25174 31845 821871 505000) 0 nil])
([nil nil ((2156 . 2158)) nil (25174 31845 821866 271000) 0 nil])
([nil nil ((2154 . 2163) (#("stat" 0 1 (fontified t clang-format+-chg chg face font-lock-type-face) 1 2 (fontified t clang-format+-chg chg face font-lock-type-face) 2 3 (fontified t clang-format+-chg chg face font-lock-type-face) 3 4 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2154) (undo-tree-id1059 . -4) (undo-tree-id1060 . -2) (undo-tree-id1061 . -2) (undo-tree-id1062 . -2) (undo-tree-id1063 . -3) (undo-tree-id1064 . -3) (undo-tree-id1065 . -4) (undo-tree-id1066 . -4) (undo-tree-id1067 . -4) (undo-tree-id1068 . -4) (undo-tree-id1069 . -4) (undo-tree-id1070 . -4) (undo-tree-id1071 . -4) (undo-tree-id1072 . -4) 2158) nil (25174 31845 821862 168000) 0 nil])
([nil nil ((2143 . 2144)) nil (25174 31845 821821 275000) 0 nil])
([nil nil ((2144 . 2146)) nil (25174 31845 821819 93000) 0 nil])
([nil nil ((2130 . 2131)) nil (25174 31845 821816 441000) 0 nil])
([nil nil ((2131 . 2145)) nil (25174 31845 821807 834000) 0 nil])
([nil nil ((2183 . 2185) (#("	    " 0 1 (c-is-sws t c-in-sws t fontified t) 1 5 (c-is-sws t c-in-sws t fontified t)) . 2183) (t 25174 31845 824417 942000)) nil (25174 31922 178591 445000) 0 nil])
([nil nil ((2181 . 2186)) nil (25174 31922 178588 756000) 0 nil])
([nil nil ((#("T" 0 1 (clang-format+-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2185) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) 2186) nil (25174 31922 178586 332000) 0 nil])
([nil nil ((2185 . 2189)) nil (25174 31922 178579 396000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2185) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (#("t" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2186) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (#("r" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2187) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (#("i" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2188) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) 2189) nil (25174 31922 178573 265000) 0 nil])
([nil nil ((2185 . 2189)) nil (25174 31922 178516 5000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2188) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) 2189) nil (25174 31922 178513 530000) 0 nil])
([nil nil ((2188 . 2191)) nil (25174 31922 178507 93000) 0 nil])
([nil nil ((2191 . 2193)) nil (25174 31922 178505 301000) 0 nil])
([nil nil ((2192 . 2193)) nil (25174 31922 178503 508000) 0 nil])
([nil nil ((2193 . 2194)) nil (25174 31922 178501 614000) 0 nil])
([nil nil ((2196 . 2202) (2196 . 2197) (nil syntax-table nil 2197 . 2198) (nil syntax-table (1) 2195 . 2196) (2195 . 2196) (#("\"" 0 1 (fontified nil clang-format+-chg chg)) . -2195) (nil syntax-table nil 2197 . 2198) (nil syntax-table (1) 2195 . 2196) (2194 . 2196)) nil (25174 31922 178498 945000) 0 nil])
([nil nil ((2204 . 2205)) nil (25174 31922 178494 413000) 0 nil])
([nil nil ((2205 . 2211)) nil (25174 31922 178492 325000) 0 nil])
([nil nil ((2211 . 2212)) nil (25174 31922 178490 227000) 0 nil])
([nil nil ((#("J" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2196) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (#("u" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2197) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (#("l" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2198) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (#("i" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2199) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (#("u" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2200) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (#("s" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2201) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) 2202) nil (25174 31922 178479 237000) 0 nil])
([nil nil ((2196 . 2198)) nil (25174 31922 178345 917000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2197) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) 2198) nil (25174 31922 178343 370000) 0 nil])
([nil nil ((#("s" 0 1 (clang-format+-chg chg fontified t c-type c-decl-id-start face font-lock-type-face)) . -2206) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) 2207) nil (25174 31922 178334 968000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2233 . 2234) (nil fontified nil 2233 . 2234) (nil fontified nil 2232 . 2233) (nil fontified nil 2231 . 2232) (nil fontified nil 2230 . 2231) (nil fontified nil 2229 . 2230) (nil fontified nil 2228 . 2229) (nil fontified nil 2227 . 2228) (nil fontified nil 2226 . 2227) (nil fontified nil 2225 . 2226) (nil fontified nil 2224 . 2225) (nil fontified nil 2223 . 2224) (nil fontified nil 2222 . 2223) (nil fontified nil 2221 . 2222) (nil fontified nil 2220 . 2221) (nil fontified nil 2219 . 2220) (nil fontified nil 2218 . 2219) (nil fontified nil 2217 . 2218) (nil fontified nil 2216 . 2217) (nil fontified nil 2215 . 2216) (nil fontified nil 2214 . 2215) (nil fontified nil 2213 . 2214) (nil fontified nil 2212 . 2213) (nil fontified nil 2211 . 2212) (nil fontified nil 2210 . 2211) (nil fontified nil 2209 . 2210) (nil fontified nil 2201 . 2209) (2201 . 2234)) nil (25174 31922 178299 45000) 0 nil])
([nil nil ((2201 . 2206) 2234) nil (25174 31922 178288 596000) 0 nil])
([nil nil ((#("J" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2230) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2231) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (#("l" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2232) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (#("i" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2233) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2234) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -2235) (undo-tree-id1222 . -1) 2236) nil (25174 31922 178281 314000) 0 nil])
([nil nil ((2230 . 2237)) nil (25174 31922 178071 636000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -2242) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -2243) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -2244) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) 2245) nil (25174 31922 178067 135000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -2241) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) 2242) nil (25174 31922 178033 56000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2240) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -2241) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (#("	" 0 1 (clang-format+-chg chg fontified nil)) . 2242) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (2240 . 2242) 2241) nil (25174 31922 178008 1000) 0 nil])
([nil nil ((2240 . 2246)) nil (25174 31922 177937 582000) 0 nil])
([nil nil ((2246 . 2249)) nil (25174 31922 177935 382000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2247) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (#("t" 0 1 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2248) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) 2249) nil (25174 31922 177931 716000) 0 nil])
([nil nil ((2247 . 2249)) nil (25174 31922 177907 893000) 0 nil])
([nil nil ((2246 . 2255) (#("sta" 0 1 (fontified t clang-format+-chg chg face font-lock-type-face) 1 2 (fontified t clang-format+-chg chg face font-lock-type-face) 2 3 (fontified t clang-format+-chg chg c-type c-decl-id-start face font-lock-type-face)) . -2246) (undo-tree-id1079 . -3) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -2) (undo-tree-id1092 . -2) (undo-tree-id1093 . -3) (undo-tree-id1094 . -3) (undo-tree-id1095 . -3) (undo-tree-id1096 . -3) (undo-tree-id1097 . -3) (undo-tree-id1098 . -3) 2249) nil (25174 31922 177903 707000) 0 nil])
([nil nil ((2255 . 2265)) nil (25174 31922 177867 11000) 0 nil])
([nil nil ((2265 . 2267)) nil (25174 31922 177864 943000) 0 nil])
([nil nil ((#("1" 0 1 (clang-format+-chg chg fontified t)) . -2226) (undo-tree-id1078 . -1) 2227) nil (25174 31922 177862 153000) 0 nil])
([nil nil ((2226 . 2227)) nil (25174 31922 177840 143000) 0 nil])
([nil nil ((2266 . 2267)) nil (25174 31922 177837 658000) 0 nil])
([nil nil ((2267 . 2268)) nil (25174 31922 177835 387000) 0 nil])
([nil nil ((2270 . 2271) (nil syntax-table nil 2271 . 2272) (nil syntax-table (1) 2269 . 2270) (2269 . 2270) (#("\"" 0 1 (clang-format+-chg chg fontified nil)) . -2269) (nil syntax-table nil 2271 . 2272) (nil syntax-table (1) 2269 . 2270) (2268 . 2270)) nil (25174 31922 177831 374000) 0 nil])
([nil nil ((2270 . 2271)) nil (25174 31922 177819 743000) 0 nil])
([nil nil ((2273 . 2274) (t 25174 31922 218403 450000)) nil (25174 31929 800350 610000) 0 nil])
([nil nil ((2274 . 2280) (t 25174 31929 813028 509000)) nil (25174 31963 438800 542000) 0 nil])
([nil nil ((2282 . 2287) (#("		" 0 2 (fontified t)) . 2282) (undo-tree-id1375 . -1) 2283) nil (25174 31963 438796 761000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2312 . 2313) (nil fontified nil 2275 . 2313) (2275 . 2313)) nil (25174 31963 438792 560000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-warning-face)) . -2269) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (nil syntax-table nil 2272 . 2273) (nil syntax-table (1) 2269 . 2270) (#("1" 0 1 (fontified t face font-lock-string-face)) . -2270) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (nil syntax-table nil 2273 . 2274) (nil syntax-table (1) 2269 . 2270) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -2271) (undo-tree-id1374 . -1) 2272) nil (25174 31963 438787 668000) 0 nil])
([nil nil ((2270 . 2271) (2270 . 2271) (nil syntax-table nil 2272 . 2273) (nil syntax-table (1) 2269 . 2270) (2269 . 2270) (#("\"" 0 1 (fontified nil clang-format+-chg chg)) . -2269) (nil syntax-table nil 2272 . 2273) (nil syntax-table (1) 2269 . 2270) (2269 . 2270)) nil (25174 31963 438763 611000) 0 nil])
([nil nil ((#("A" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -2270) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) 2271) nil (25174 31963 438757 149000) 0 nil])
([nil nil ((2270 . 2271)) nil (25174 31963 438724 39000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -2314) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (#(" " 0 1 (fontified t)) . -2315) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (#(" " 0 1 (fontified t)) . -2316) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (#(" " 0 1 (fontified t)) . -2317) (undo-tree-id1528 . -1) 2318 (t 25174 31963 447175 529000)) nil (25174 31998 90246 401000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -2313) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -2314) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (#("	" 0 1 (fontified nil)) . 2315) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (2313 . 2315) 2314) nil (25174 31998 90210 275000) 0 nil])
([nil nil ((#("            statement = connection.prepareStatement(\"INSERT INTO users(firstname, lastname, listGommettes) VALUES(?, ?, ?);\");
	    statement.setString(1, \"C\");
	    statement.setString(2, \"Bastien\");
	    statement.setString(3, \"1\");
            statement.executeUpdate();" 0 1 (c-is-sws t c-in-sws t fontified t) 1 8 (c-is-sws t c-in-sws t fontified t) 8 12 (c-is-sws t c-in-sws t fontified t) 12 13 (c-is-sws t fontified t) 13 24 (fontified t) 24 28 (fontified t) 28 36 (fontified t) 36 52 (fontified t) 52 90 (fontified t face font-lock-string-face) 90 91 (fontified t face font-lock-string-face) 91 92 (fontified t face font-lock-string-face) 92 93 (fontified t face font-lock-string-face) 93 94 (fontified t face font-lock-string-face) 94 95 (fontified t face font-lock-string-face) 95 96 (fontified t face font-lock-string-face) 96 97 (fontified t face font-lock-string-face) 97 98 (fontified t face font-lock-string-face) 98 99 (fontified t face font-lock-string-face) 99 100 (fontified t face font-lock-string-face) 100 101 (fontified t face font-lock-string-face) 101 102 (fontified t face font-lock-string-face) 102 103 (fontified t face font-lock-string-face) 103 104 (fontified t face font-lock-string-face) 104 105 (fontified t face font-lock-string-face) 105 112 (fontified t face font-lock-string-face) 112 118 (fontified t face font-lock-string-face) 118 119 (fontified t face font-lock-string-face) 119 120 (fontified t face font-lock-string-face) 120 121 (fontified t face font-lock-string-face) 121 124 (fontified t face font-lock-string-face) 124 125 (fontified t) 125 126 (fontified t rear-nonsticky t) 126 127 (fontified t) 127 132 (fontified t) 132 140 (fontified t) 140 141 (fontified t) 141 142 (fontified t) 142 143 (fontified t) 143 144 (fontified t) 144 145 (fontified t) 145 146 (fontified t) 146 147 (fontified t) 147 148 (fontified t) 148 149 (fontified t) 149 150 (fontified t) 150 151 (fontified t) 151 152 (fontified t) 152 153 (fontified t) 153 154 (fontified t) 154 155 (fontified t) 155 156 (fontified t face font-lock-string-face) 156 157 (fontified t face font-lock-string-face) 157 158 (fontified t face font-lock-string-face) 158 159 (fontified t) 159 160 (fontified t) 160 161 (fontified t) 161 166 (fontified t) 166 174 (fontified t) 174 175 (fontified t) 175 176 (fontified t) 176 177 (fontified t) 177 178 (fontified t) 178 179 (fontified t) 179 180 (fontified t) 180 181 (fontified t) 181 182 (fontified t) 182 183 (fontified t) 183 184 (fontified t) 184 185 (fontified t) 185 186 (fontified t) 186 187 (fontified t) 187 188 (fontified t) 188 189 (fontified t) 189 190 (fontified t face font-lock-string-face) 190 191 (fontified t face font-lock-string-face) 191 192 (fontified t face font-lock-string-face) 192 193 (fontified t face font-lock-string-face) 193 194 (fontified t face font-lock-string-face) 194 195 (fontified t face font-lock-string-face) 195 196 (fontified t face font-lock-string-face) 196 197 (fontified t face font-lock-string-face) 197 198 (fontified t face font-lock-string-face) 198 199 (fontified t) 199 200 (fontified t rear-nonsticky t) 200 201 (fontified t) 201 206 (fontified t) 206 214 (fontified t) 214 215 (fontified t) 215 216 (fontified t) 216 217 (fontified t) 217 218 (fontified t) 218 219 (fontified t) 219 220 (fontified t) 220 221 (fontified t) 221 222 (fontified t) 222 223 (fontified t) 223 224 (fontified t) 224 225 (fontified t) 225 226 (fontified t) 226 227 (fontified t) 227 228 (fontified t) 228 229 (fontified t) 229 230 (fontified t face font-lock-string-face) 230 231 (fontified t face font-lock-string-face) 231 232 (fontified t face font-lock-string-face) 232 233 (fontified t) 233 234 (fontified t) 234 235 (fontified t) 235 272 (fontified t) 272 273 (rear-nonsticky t fontified t)) . 2040) (undo-tree-id1437 . -273) (undo-tree-id1438 . -132) (undo-tree-id1439 . -161) (undo-tree-id1440 . -229) (undo-tree-id1441 . -229) (undo-tree-id1442 . -229) (undo-tree-id1443 . -229) (undo-tree-id1444 . -230) (undo-tree-id1445 . -230) (undo-tree-id1446 . -230) (undo-tree-id1447 . -230) (undo-tree-id1448 . -231) (undo-tree-id1449 . -231) (undo-tree-id1450 . -235) (undo-tree-id1451 . -235) (undo-tree-id1452 . -201) (undo-tree-id1453 . -201) (undo-tree-id1454 . -161) (undo-tree-id1455 . -161) (undo-tree-id1456 . -127) (undo-tree-id1457 . -127) (undo-tree-id1458 . -231) (undo-tree-id1459 . -231) (undo-tree-id1460 . -273) (undo-tree-id1461 . -273) (undo-tree-id1462 . -273) (undo-tree-id1463 . -273) (undo-tree-id1464 . -273) (undo-tree-id1465 . -273) (undo-tree-id1466 . -273) (undo-tree-id1467 . -273) (undo-tree-id1468 . -273) (undo-tree-id1469 . -273) (undo-tree-id1470 . -273) (undo-tree-id1471 . -273) (undo-tree-id1472 . -273) (undo-tree-id1473 . -273) (undo-tree-id1474 . -235) (undo-tree-id1475 . -273) (undo-tree-id1476 . -273) (undo-tree-id1477 . -273) (undo-tree-id1478 . -235) (undo-tree-id1479 . -201) (undo-tree-id1480 . -161) (undo-tree-id1481 . -127) (undo-tree-id1482 . -102)) nil (25174 31998 90161 451000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face c-in-sws t)) . -2039) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 2040) nil (25174 31998 90088 877000) 0 nil])
([nil nil ((3151 . 3156) (#("	    " 0 5 (fontified nil)) . 3150) (undo-tree-id1379 . -5) (3155 . 3156)) nil (25174 31998 89948 970000) 0 nil])
([nil nil ((3152 . 3157) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 3151) (undo-tree-id1376 . -5) (undo-tree-id1377 . -5) (undo-tree-id1378 . -5) (3156 . 3157)) nil (25174 31998 89943 699000) 0 nil])
([nil nil ((nil fontified nil 3423 . 3424) (nil fontified nil 3386 . 3423) (nil fontified nil 3385 . 3386) (nil fontified nil 3384 . 3385) (nil fontified nil 3383 . 3384) (nil fontified nil 3382 . 3383) (nil fontified nil 3381 . 3382) (nil fontified nil 3380 . 3381) (nil fontified nil 3379 . 3380) (nil fontified nil 3378 . 3379) (nil fontified nil 3377 . 3378) (nil fontified nil 3376 . 3377) (nil fontified nil 3375 . 3376) (nil fontified nil 3374 . 3375) (nil fontified nil 3373 . 3374) (nil fontified nil 3372 . 3373) (nil fontified nil 3371 . 3372) (nil fontified nil 3370 . 3371) (nil fontified nil 3369 . 3370) (nil fontified nil 3368 . 3369) (nil fontified nil 3367 . 3368) (nil fontified nil 3366 . 3367) (nil fontified nil 3365 . 3366) (nil fontified nil 3357 . 3365) (nil fontified nil 3352 . 3357) (nil fontified nil 3351 . 3352) (nil fontified nil 3350 . 3351) (nil fontified nil 3349 . 3350) (nil fontified nil 3348 . 3349) (nil fontified nil 3347 . 3348) (nil fontified nil 3346 . 3347) (nil fontified nil 3345 . 3346) (nil fontified nil 3344 . 3345) (nil fontified nil 3343 . 3344) (nil fontified nil 3342 . 3343) (nil fontified nil 3341 . 3342) (nil fontified nil 3340 . 3341) (nil fontified nil 3339 . 3340) (nil fontified nil 3338 . 3339) (nil fontified nil 3337 . 3338) (nil fontified nil 3336 . 3337) (nil fontified nil 3335 . 3336) (nil fontified nil 3334 . 3335) (nil fontified nil 3333 . 3334) (nil fontified nil 3332 . 3333) (nil fontified nil 3331 . 3332) (nil fontified nil 3330 . 3331) (nil fontified nil 3329 . 3330) (nil fontified nil 3328 . 3329) (nil fontified nil 3327 . 3328) (nil fontified nil 3326 . 3327) (nil fontified nil 3325 . 3326) (nil fontified nil 3317 . 3325) (nil fontified nil 3312 . 3317) (nil fontified nil 3311 . 3312) (nil fontified nil 3310 . 3311) (nil fontified nil 3309 . 3310) (nil fontified nil 3308 . 3309) (nil fontified nil 3307 . 3308) (nil fontified nil 3306 . 3307) (nil fontified nil 3305 . 3306) (nil fontified nil 3304 . 3305) (nil fontified nil 3303 . 3304) (nil fontified nil 3302 . 3303) (nil fontified nil 3301 . 3302) (nil fontified nil 3300 . 3301) (nil fontified nil 3299 . 3300) (nil fontified nil 3298 . 3299) (nil fontified nil 3297 . 3298) (nil fontified nil 3296 . 3297) (nil fontified nil 3295 . 3296) (nil fontified nil 3294 . 3295) (nil fontified nil 3293 . 3294) (nil fontified nil 3292 . 3293) (nil fontified nil 3291 . 3292) (nil fontified nil 3283 . 3291) (nil fontified nil 3278 . 3283) (nil fontified nil 3277 . 3278) (nil fontified nil 3276 . 3277) (nil fontified nil 3275 . 3276) (nil fontified nil 3272 . 3275) (nil fontified nil 3271 . 3272) (nil fontified nil 3270 . 3271) (nil fontified nil 3269 . 3270) (nil fontified nil 3263 . 3269) (nil fontified nil 3256 . 3263) (nil fontified nil 3255 . 3256) (nil fontified nil 3254 . 3255) (nil fontified nil 3253 . 3254) (nil fontified nil 3252 . 3253) (nil fontified nil 3251 . 3252) (nil fontified nil 3250 . 3251) (nil fontified nil 3249 . 3250) (nil fontified nil 3248 . 3249) (nil fontified nil 3247 . 3248) (nil fontified nil 3246 . 3247) (nil fontified nil 3245 . 3246) (nil fontified nil 3244 . 3245) (nil fontified nil 3243 . 3244) (nil fontified nil 3242 . 3243) (nil fontified nil 3241 . 3242) (nil fontified nil 3203 . 3241) (nil fontified nil 3187 . 3203) (nil fontified nil 3179 . 3187) (nil fontified nil 3175 . 3179) (nil fontified nil 3164 . 3175) (nil fontified nil 3163 . 3164) (nil fontified nil 3159 . 3163) (nil fontified nil 3152 . 3159) (nil fontified nil 3151 . 3152) (3151 . 3424)) nil (25174 31998 89913 555000) 0 nil])
([nil nil ((#("s" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 3216) (#("r" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 3216) (#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 3216) (#("s" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 3216) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 3216)) nil (25174 31998 89874 472000) 0 nil])
([nil nil ((3216 . 3227)) nil (25174 31998 89864 561000) 0 nil])
([nil nil ((1265 . 1267) (t 25174 31998 105247 765000)) nil (25174 32195 555215 391000) 0 nil])
([nil nil ((#("O" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -1265) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (#("F" 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -1266) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) 1267) nil (25174 32195 555205 979000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -3247) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3248) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -3249) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -3250) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3251) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3252) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (#("G" 0 1 (fontified t face font-lock-string-face)) . -3253) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -3254) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -3255) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -3256) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3257) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3258) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -3259) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -3260) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -3261) (undo-tree-id1795 . -1) 3262 (t 25174 32195 571122 469000)) nil (25174 32347 608884 691000) 0 nil])
([nil nil ((3348 . 3350)) nil (25174 32347 608118 258000) 0 nil])
([nil nil ((#("," 0 1 (fontified t face font-lock-string-face)) . -3260) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -3261) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (#("?" 0 1 (fontified t face font-lock-string-face)) . -3262) (undo-tree-id1804 . -1) 3263 (t 25174 32347 617142 409000)) nil (25174 32361 562082 263000) 0 nil])
([nil nil ((3260 . 3261) (t 25174 32361 600414 366000)) nil (25174 32381 819909 342000) 0 nil])
([nil nil ((3261 . 3263)) nil (25174 32381 819906 255000) 0 nil])
([nil nil ((#("/" 0 1 (fontified t clang-format+-chg delete)) . 3348) (#("/" 0 1 (c-in-sws t c-is-sws t fontified t face font-lock-comment-delimiter-face)) . 3348)) nil (25174 32381 819895 28000) 0 nil])
([nil nil ((219 . 224) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 218) (undo-tree-id2263 . -5) (217 . 224) (t 25174 32381 862681 730000)) nil (25174 32475 147064 489000) 0 nil])
([nil nil ((218 . 223)) nil (25174 32475 147060 289000) 0 nil])
([nil nil ((223 . 225)) nil (25174 32475 147058 455000) 0 nil])
([nil nil ((225 . 229)) nil (25174 32475 147056 610000) 0 nil])
([nil nil ((#("o" 0 1 (fontified t clang-format+-chg chg face font-lock-comment-face)) . -227) (undo-tree-id2261 . -1) (#("m" 0 1 (fontified t clang-format+-chg chg face font-lock-comment-face)) . -228) (undo-tree-id2262 . -1) 229) nil (25174 32475 147053 583000) 0 nil])
([nil nil ((227 . 243)) nil (25174 32475 147048 311000) 0 nil])
([nil nil ((245 . 250) (#("	    " 0 1 (fontified nil clang-format+-chg chg c-is-sws t c-in-sws t) 1 5 (fontified nil clang-format+-chg chg c-is-sws t c-in-sws t)) . 244) (undo-tree-id2260 . -5) (243 . 250)) nil (25174 32475 147046 35000) 0 nil])
([nil nil ((nil rear-nonsticky nil 345 . 346) (nil fontified nil 321 . 346) (nil fontified nil 320 . 321) (nil fontified nil 315 . 320) (nil fontified nil 312 . 315) (nil fontified nil 306 . 312) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 251 . 290) (nil fontified nil 250 . 251) (nil fontified nil 246 . 250) (nil fontified nil 245 . 246) (245 . 346)) nil (25174 32475 147040 161000) 0 nil])
([nil nil ((#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -291) (undo-tree-id2240 . -1) (#("R" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -292) (undo-tree-id2241 . -1) (#("U" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -293) (undo-tree-id2242 . -1) (#("N" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -294) (undo-tree-id2243 . -1) (#("C" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -295) (undo-tree-id2244 . -1) (#("A" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -296) (undo-tree-id2245 . -1) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -297) (undo-tree-id2246 . -1) (#("E" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -298) (undo-tree-id2247 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -299) (undo-tree-id2248 . -1) (#("T" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -300) (undo-tree-id2249 . -1) (#("A" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -301) (undo-tree-id2250 . -1) (#("B" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -302) (undo-tree-id2251 . -1) (#("L" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -303) (undo-tree-id2252 . -1) (#("E" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -304) (undo-tree-id2253 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -305) (undo-tree-id2254 . -1) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -306) (undo-tree-id2255 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -307) (undo-tree-id2256 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -308) (undo-tree-id2257 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -309) (undo-tree-id2258 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -310) (undo-tree-id2259 . -1) 311) nil (25174 32475 147020 625000) 0 nil])
([nil nil ((291 . 302)) nil (25174 32475 146985 221000) 0 nil])
([nil nil ((302 . 313)) nil (25174 32475 146983 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 351 . 352) (nil fontified nil 348 . 352) (nil fontified nil 347 . 348) (nil fontified nil 346 . 347) (nil fontified nil 322 . 346) (nil fontified nil 321 . 322) (nil fontified nil 316 . 321) (nil fontified nil 313 . 316) (nil fontified nil 312 . 313) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 250 . 289) (nil fontified nil 249 . 250) (nil fontified nil 245 . 249) (nil fontified nil 244 . 245) (244 . 352)) nil (25174 32475 146978 625000) 0 nil])
([nil nil ((#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -311) (undo-tree-id2239 . -1) 312) nil (25174 32475 146964 482000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -300) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (#("p" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -301) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -302) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (#("o" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -303) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (#("f" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -304) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -305) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -306) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -307) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -308) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -309) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -310) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) 311) nil (25174 32475 146945 537000) 0 nil])
([nil nil ((300 . 307)) nil (25174 32475 146717 495000) 0 nil])
([nil nil ((#("n" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -306) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) 307) nil (25174 32475 146715 260000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -451) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -452) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -453) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -454) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) 455) nil (25174 32475 146705 136000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -450) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -451) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (#("	" 0 1 (clang-format+-chg chg fontified nil)) . 452) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (450 . 452) 451) nil (25174 32475 146659 868000) 0 nil])
([nil nil ((244 . 245)) nil (25174 32475 146599 575000) 0 nil])
([nil nil ((nil fontified nil 449 . 450) (nil fontified nil 425 . 449) (nil fontified nil 424 . 425) (nil fontified nil 419 . 424) (nil fontified nil 416 . 419) (nil fontified nil 415 . 416) (nil fontified nil 414 . 415) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 409 . 410) (nil fontified nil 408 . 409) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 405 . 406) (nil fontified nil 404 . 405) (nil fontified nil 403 . 404) (nil fontified nil 402 . 403) (nil fontified nil 401 . 402) (nil fontified nil 400 . 401) (nil fontified nil 399 . 400) (nil fontified nil 398 . 399) (nil fontified nil 397 . 398) (nil fontified nil 396 . 397) (nil fontified nil 395 . 396) (nil fontified nil 394 . 395) (nil fontified nil 393 . 394) (nil fontified nil 392 . 393) (nil fontified nil 353 . 392) (nil fontified nil 352 . 353) (nil fontified nil 348 . 352) (nil fontified nil 347 . 348) (nil fontified nil 346 . 347) (nil fontified nil 345 . 346) (nil fontified nil 342 . 345) (nil fontified nil 341 . 342) (nil fontified nil 340 . 341) (nil fontified nil 316 . 340) (nil fontified nil 315 . 316) (nil fontified nil 310 . 315) (nil fontified nil 307 . 310) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 250 . 289) (nil fontified nil 249 . 250) (nil fontified nil 245 . 249) (nil fontified nil 244 . 245) (244 . 450)) nil (25174 32475 146592 809000) 0 nil])
([nil nil ((#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -301) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -302) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -303) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -304) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -305) (undo-tree-id2006 . -1) 306) nil (25174 32475 146566 867000) 0 nil])
([nil nil ((301 . 307)) nil (25174 32475 146532 365000) 0 nil])
([nil nil ((#("f" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -408) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -409) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -410) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -411) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -412) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (#("u" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -413) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -414) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -415) (undo-tree-id1984 . -1) 416) nil (25174 32475 146522 61000) 0 nil])
([nil nil ((#("p" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -405) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -406) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (#("o" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -407) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) 408) nil (25174 32475 146367 855000) 0 nil])
([nil nil ((405 . 414)) nil (25174 32475 146043 475000) 0 nil])
([nil nil ((244 . 245)) nil (25174 32475 146041 209000) 0 nil])
([nil nil ((nil fontified nil 346 . 347) (nil fontified nil 343 . 346) (nil fontified nil 342 . 343) (nil fontified nil 341 . 342) (nil fontified nil 317 . 341) (nil fontified nil 316 . 317) (nil fontified nil 311 . 316) (nil fontified nil 308 . 311) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 302 . 303) (nil fontified nil 301 . 302) (nil fontified nil 300 . 301) (nil fontified nil 299 . 300) (nil fontified nil 298 . 299) (nil fontified nil 297 . 298) (nil fontified nil 296 . 297) (nil fontified nil 295 . 296) (nil fontified nil 294 . 295) (nil fontified nil 293 . 294) (nil fontified nil 292 . 293) (nil fontified nil 291 . 292) (nil fontified nil 290 . 291) (nil fontified nil 289 . 290) (nil fontified nil 250 . 289) (nil fontified nil 249 . 250) (nil fontified nil 245 . 249) (nil fontified nil 244 . 245) (244 . 347)) nil (25174 32475 146036 538000) 0 nil])
([nil nil ((#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -301) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (#("l" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -302) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -303) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (#("v" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -304) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (#("e" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -305) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -306) (undo-tree-id1843 . -1) 307) nil (25174 32475 146018 996000) 0 nil])
([nil nil ((301 . 304)) nil (25174 32475 145951 506000) 0 nil])
([nil nil ((#("o" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -303) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) 304) nil (25174 32475 145947 948000) 0 nil])
([nil nil ((303 . 319)) nil (25174 32475 145919 340000) 0 nil])
([nil nil ((#("	    // remove all instance in sql base
	    statement = connection.prepareStatement(\"TRUNCATE TABLE users\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE TABLE professeurs\");
	    statement.executeUpdate();

	    statement = connection.prepareStatement(\"TRUNCATE TABLE eleves\");
	    statement.executeUpdate();
        
	    statement = connection.prepareStatement(\"TRUNCATE TABLE gommettes\");
	    statement.executeUpdate();
	    
	    statement = connection.prepareStatement(\"TRUNCATE TABLE gommettesAttribuees\");
	    statement.executeUpdate();	    " 0 5 (c-in-sws t c-is-sws t fontified t) 5 6 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 6 8 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 8 39 (c-in-sws t fontified t face font-lock-comment-face) 39 40 (c-in-sws t fontified t face font-lock-comment-face) 40 41 (c-is-sws t c-in-sws t fontified t) 41 44 (c-in-sws t c-is-sws t fontified t) 44 45 (c-in-sws t c-is-sws t fontified t) 45 46 (c-is-sws t fontified t) 46 85 (fontified t) 85 86 (face font-lock-string-face fontified t) 86 87 (face font-lock-string-face fontified t) 87 88 (face font-lock-string-face fontified t) 88 89 (face font-lock-string-face fontified t) 89 90 (face font-lock-string-face fontified t) 90 91 (face font-lock-string-face fontified t) 91 92 (face font-lock-string-face fontified t) 92 93 (face font-lock-string-face fontified t) 93 94 (face font-lock-string-face fontified t) 94 95 (face font-lock-string-face fontified t) 95 96 (face font-lock-string-face fontified t) 96 97 (face font-lock-string-face fontified t) 97 98 (face font-lock-string-face fontified t) 98 99 (face font-lock-string-face fontified t) 99 100 (face font-lock-string-face fontified t) 100 101 (face font-lock-string-face fontified t) 101 107 (face font-lock-string-face fontified t) 107 110 (fontified t) 110 115 (fontified t) 115 116 (fontified t) 116 142 (fontified t) 142 143 (fontified t) 143 146 (fontified t) 146 148 (fontified t) 148 149 (fontified t) 149 188 (fontified t) 188 189 (fontified t face font-lock-string-face) 189 190 (fontified t face font-lock-string-face) 190 191 (fontified t face font-lock-string-face) 191 192 (fontified t face font-lock-string-face) 192 193 (fontified t face font-lock-string-face) 193 194 (fontified t face font-lock-string-face) 194 195 (fontified t face font-lock-string-face) 195 196 (fontified t face font-lock-string-face) 196 197 (fontified t face font-lock-string-face) 197 198 (fontified t face font-lock-string-face) 198 199 (fontified t face font-lock-string-face) 199 200 (fontified t face font-lock-string-face) 200 201 (fontified t face font-lock-string-face) 201 202 (fontified t face font-lock-string-face) 202 203 (fontified t face font-lock-string-face) 203 216 (fontified t face font-lock-string-face) 216 219 (fontified t) 219 224 (fontified t) 224 225 (fontified t) 225 251 (fontified t) 251 252 (fontified t) 252 255 (fontified t) 255 257 (fontified t) 257 258 (fontified t) 258 287 (fontified t) 287 297 (fontified t) 297 298 (fontified t face font-lock-string-face) 298 299 (fontified t face font-lock-string-face) 299 300 (fontified t face font-lock-string-face) 300 301 (fontified t face font-lock-string-face) 301 302 (fontified t face font-lock-string-face) 302 303 (fontified t face font-lock-string-face) 303 304 (fontified t face font-lock-string-face) 304 305 (fontified t face font-lock-string-face) 305 306 (fontified t face font-lock-string-face) 306 307 (fontified t face font-lock-string-face) 307 308 (fontified t face font-lock-string-face) 308 309 (fontified t face font-lock-string-face) 309 310 (fontified t face font-lock-string-face) 310 311 (fontified t face font-lock-string-face) 311 312 (fontified t face font-lock-string-face) 312 320 (fontified t face font-lock-string-face) 320 322 (fontified t) 322 323 (fontified t) 323 328 (fontified t) 328 329 (fontified t) 329 348 (fontified t) 348 353 (fontified t) 353 354 (fontified t) 354 355 (fontified t) 355 364 (fontified t) 364 369 (fontified t) 369 370 (fontified t) 370 385 (fontified t) 385 409 (fontified t) 409 410 (fontified t face font-lock-string-face) 410 411 (fontified t face font-lock-string-face) 411 412 (fontified t face font-lock-string-face) 412 413 (fontified t face font-lock-string-face) 413 414 (fontified t face font-lock-string-face) 414 415 (fontified t face font-lock-string-face) 415 416 (fontified t face font-lock-string-face) 416 417 (fontified t face font-lock-string-face) 417 418 (fontified t face font-lock-string-face) 418 419 (fontified t face font-lock-string-face) 419 420 (fontified t face font-lock-string-face) 420 421 (fontified t face font-lock-string-face) 421 422 (fontified t face font-lock-string-face) 422 423 (fontified t face font-lock-string-face) 423 424 (fontified t face font-lock-string-face) 424 435 (fontified t face font-lock-string-face) 435 437 (fontified t) 437 438 (fontified t) 438 443 (fontified t) 443 444 (fontified t) 444 457 (fontified t) 457 469 (fontified t) 469 475 (fontified t) 475 476 (fontified t) 476 481 (fontified t) 481 482 (fontified t) 482 494 (fontified t) 494 509 (fontified t) 509 521 (fontified t) 521 522 (fontified t face font-lock-string-face) 522 523 (fontified t face font-lock-string-face) 523 524 (fontified t face font-lock-string-face) 524 525 (fontified t face font-lock-string-face) 525 526 (fontified t face font-lock-string-face) 526 527 (fontified t face font-lock-string-face) 527 528 (fontified t face font-lock-string-face) 528 529 (fontified t face font-lock-string-face) 529 530 (fontified t face font-lock-string-face) 530 531 (fontified t face font-lock-string-face) 531 532 (fontified t face font-lock-string-face) 532 533 (fontified t face font-lock-string-face) 533 534 (fontified t face font-lock-string-face) 534 535 (fontified t face font-lock-string-face) 535 536 (fontified t face font-lock-string-face) 536 557 (fontified t face font-lock-string-face) 557 559 (fontified t) 559 560 (fontified t) 560 565 (fontified t) 565 566 (fontified t) 566 590 (fontified t) 590 591 (rear-nonsticky t fontified t) 591 596 (fontified t)) . 779) (undo-tree-id2814 . -596) (undo-tree-id2815 . -141) (undo-tree-id2816 . -596) (undo-tree-id2817 . -596) (undo-tree-id2818 . -596) (undo-tree-id2819 . -560) (undo-tree-id2820 . -476) (undo-tree-id2821 . -470) (undo-tree-id2822 . -438) (undo-tree-id2823 . -364) (undo-tree-id2824 . -355) (undo-tree-id2825 . -323) (undo-tree-id2826 . -252) (undo-tree-id2827 . -251) (undo-tree-id2828 . -219) (undo-tree-id2829 . -143) (undo-tree-id2830 . -142) (undo-tree-id2831 . -110) (undo-tree-id2832 . -40) (t 25174 32475 189373 982000)) nil (25174 32488 456417 130000) 0 nil])
([nil nil ((#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -774) (undo-tree-id2683 . -1) (undo-tree-id2684 . -1) (undo-tree-id2685 . -1) (undo-tree-id2686 . -1) (undo-tree-id2687 . -1) (undo-tree-id2688 . -1) (undo-tree-id2689 . -1) (undo-tree-id2690 . -1) (undo-tree-id2691 . -1) (undo-tree-id2692 . -1) (undo-tree-id2693 . -1) (undo-tree-id2694 . -1) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1) (undo-tree-id2711 . -1) (undo-tree-id2712 . -1) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -775) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -1) (undo-tree-id2724 . -1) (undo-tree-id2725 . -1) (undo-tree-id2726 . -1) (undo-tree-id2727 . -1) (undo-tree-id2728 . -1) (undo-tree-id2729 . -1) (undo-tree-id2730 . -1) (undo-tree-id2731 . -1) (undo-tree-id2732 . -1) (undo-tree-id2733 . -1) (undo-tree-id2734 . -1) (undo-tree-id2735 . -1) (undo-tree-id2736 . -1) (undo-tree-id2737 . -1) (undo-tree-id2738 . -1) (undo-tree-id2739 . -1) (undo-tree-id2740 . -1) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -776) (undo-tree-id2741 . -1) (undo-tree-id2742 . -1) (undo-tree-id2743 . -1) (undo-tree-id2744 . -1) (undo-tree-id2745 . -1) (undo-tree-id2746 . -1) (undo-tree-id2747 . -1) (undo-tree-id2748 . -1) (undo-tree-id2749 . -1) (undo-tree-id2750 . -1) (undo-tree-id2751 . -1) (undo-tree-id2752 . -1) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (#(" " 0 1 (c-is-sws t c-in-sws t fontified t)) . -777) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -1) (undo-tree-id2770 . -1) (undo-tree-id2771 . -1) (undo-tree-id2772 . -1) (undo-tree-id2773 . -1) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (undo-tree-id2780 . -1) (undo-tree-id2781 . -1) (undo-tree-id2782 . -1) (undo-tree-id2783 . -1) (undo-tree-id2784 . -1) (undo-tree-id2785 . -1) (undo-tree-id2786 . -1) (undo-tree-id2787 . -1) (undo-tree-id2788 . -1) (undo-tree-id2789 . -1) (undo-tree-id2790 . -1) (#("
" 0 1 (c-is-sws t c-in-sws t fontified t)) . -778) (undo-tree-id2791 . -1) (undo-tree-id2792 . -1) (undo-tree-id2793 . -1) (undo-tree-id2794 . -1) (undo-tree-id2795 . -1) (undo-tree-id2796 . -1) (undo-tree-id2797 . -1) (undo-tree-id2798 . -1) (undo-tree-id2799 . -1) (undo-tree-id2800 . -1) (undo-tree-id2801 . -1) (undo-tree-id2802 . -1) (undo-tree-id2803 . -1) (undo-tree-id2804 . -1) (undo-tree-id2805 . -1) (undo-tree-id2806 . -1) (undo-tree-id2807 . -1) (undo-tree-id2808 . -1) (undo-tree-id2809 . -1) (undo-tree-id2810 . -1) (undo-tree-id2811 . -1) (undo-tree-id2812 . -1) (undo-tree-id2813 . -1) 779) nil (25174 32488 456374 999000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -772) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -773) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -774) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -775) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -776) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -777) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -778) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -779) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -780) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (#("	" 0 1 (fontified nil)) . 781) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) (773 . 781) 774) nil (25174 32488 456149 223000) 0 nil])
([nil nil ((219 . 224) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 218) (undo-tree-id2264 . -5) (undo-tree-id2265 . -5) (undo-tree-id2266 . -5) (217 . 224)) nil (25174 32488 455394 341000) 0 nil])
([nil nil ((nil rear-nonsticky nil 813 . 814) (nil fontified nil 809 . 814) (nil fontified nil 808 . 809) (nil fontified nil 784 . 808) (nil fontified nil 783 . 784) (nil fontified nil 778 . 783) (nil fontified nil 777 . 778) (nil fontified nil 775 . 777) (nil fontified nil 754 . 775) (nil fontified nil 753 . 754) (nil fontified nil 752 . 753) (nil fontified nil 751 . 752) (nil fontified nil 750 . 751) (nil fontified nil 749 . 750) (nil fontified nil 748 . 749) (nil fontified nil 747 . 748) (nil fontified nil 746 . 747) (nil fontified nil 745 . 746) (nil fontified nil 744 . 745) (nil fontified nil 743 . 744) (nil fontified nil 742 . 743) (nil fontified nil 741 . 742) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 727 . 739) (nil fontified nil 712 . 727) (nil fontified nil 700 . 712) (nil fontified nil 699 . 700) (nil fontified nil 694 . 699) (nil fontified nil 693 . 694) (nil fontified nil 687 . 693) (nil fontified nil 675 . 687) (nil fontified nil 662 . 675) (nil fontified nil 661 . 662) (nil fontified nil 656 . 661) (nil fontified nil 655 . 656) (nil fontified nil 653 . 655) (nil fontified nil 642 . 653) (nil fontified nil 641 . 642) (nil fontified nil 640 . 641) (nil fontified nil 639 . 640) (nil fontified nil 638 . 639) (nil fontified nil 637 . 638) (nil fontified nil 636 . 637) (nil fontified nil 635 . 636) (nil fontified nil 634 . 635) (nil fontified nil 633 . 634) (nil fontified nil 632 . 633) (nil fontified nil 631 . 632) (nil fontified nil 630 . 631) (nil fontified nil 629 . 630) (nil fontified nil 628 . 629) (nil fontified nil 627 . 628) (nil fontified nil 603 . 627) (nil fontified nil 588 . 603) (nil fontified nil 587 . 588) (nil fontified nil 582 . 587) (nil fontified nil 573 . 582) (nil fontified nil 572 . 573) (nil fontified nil 571 . 572) (nil fontified nil 566 . 571) (nil fontified nil 547 . 566) (nil fontified nil 546 . 547) (nil fontified nil 541 . 546) (nil fontified nil 540 . 541) (nil fontified nil 538 . 540) (nil fontified nil 530 . 538) (nil fontified nil 529 . 530) (nil fontified nil 528 . 529) (nil fontified nil 527 . 528) (nil fontified nil 526 . 527) (nil fontified nil 525 . 526) (nil fontified nil 524 . 525) (nil fontified nil 523 . 524) (nil fontified nil 522 . 523) (nil fontified nil 521 . 522) (nil fontified nil 520 . 521) (nil fontified nil 519 . 520) (nil fontified nil 518 . 519) (nil fontified nil 517 . 518) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 505 . 515) (nil fontified nil 476 . 505) (nil fontified nil 475 . 476) (nil fontified nil 473 . 475) (nil fontified nil 470 . 473) (nil fontified nil 469 . 470) (nil fontified nil 443 . 469) (nil fontified nil 442 . 443) (nil fontified nil 437 . 442) (nil fontified nil 434 . 437) (nil fontified nil 421 . 434) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 418 . 419) (nil fontified nil 417 . 418) (nil fontified nil 416 . 417) (nil fontified nil 415 . 416) (nil fontified nil 414 . 415) (nil fontified nil 413 . 414) (nil fontified nil 412 . 413) (nil fontified nil 411 . 412) (nil fontified nil 410 . 411) (nil fontified nil 409 . 410) (nil fontified nil 408 . 409) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 367 . 406) (nil fontified nil 366 . 367) (nil fontified nil 364 . 366) (nil fontified nil 361 . 364) (nil fontified nil 360 . 361) (nil fontified nil 334 . 360) (nil fontified nil 333 . 334) (nil fontified nil 328 . 333) (nil fontified nil 325 . 328) (nil fontified nil 319 . 325) (nil fontified nil 318 . 319) (nil fontified nil 317 . 318) (nil fontified nil 316 . 317) (nil fontified nil 315 . 316) (nil fontified nil 314 . 315) (nil fontified nil 313 . 314) (nil fontified nil 312 . 313) (nil fontified nil 311 . 312) (nil fontified nil 310 . 311) (nil fontified nil 309 . 310) (nil fontified nil 308 . 309) (nil fontified nil 307 . 308) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 303 . 304) (nil fontified nil 264 . 303) (nil fontified nil 263 . 264) (nil fontified nil 262 . 263) (nil fontified nil 259 . 262) (nil fontified nil 258 . 259) (nil fontified nil 257 . 258) (nil fontified nil 226 . 257) (nil fontified nil 224 . 226) (nil fontified nil 223 . 224) (nil fontified nil 218 . 223) (218 . 814)) nil (25174 32488 455354 817000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -692) (undo-tree-id2875 . -1) 693 (t 25174 32488 472012 54000)) nil (25174 32494 423675 51000) 0 nil])
([nil nil ((#("	   " 0 4 (fontified t)) . 688) (undo-tree-id2867 . -4) (undo-tree-id2868 . -4) (undo-tree-id2869 . -4) (undo-tree-id2870 . -4) (undo-tree-id2871 . -4) (undo-tree-id2872 . -4) (undo-tree-id2873 . -4) (undo-tree-id2874 . -4) 692) nil (25174 32494 423669 7000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -687) (undo-tree-id2855 . -1) (undo-tree-id2856 . -1) (undo-tree-id2857 . -1) (undo-tree-id2858 . -1) (undo-tree-id2859 . -1) (undo-tree-id2860 . -1) (undo-tree-id2861 . -1) (undo-tree-id2862 . -1) (undo-tree-id2863 . -1) (undo-tree-id2864 . -1) (undo-tree-id2865 . -1) (undo-tree-id2866 . -1) 688) nil (25174 32494 423653 9000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 573) (undo-tree-id2849 . -8) (undo-tree-id2850 . -8) (undo-tree-id2851 . -8) (undo-tree-id2852 . -8) (undo-tree-id2853 . -8) (undo-tree-id2854 . -8) 581) nil (25174 32494 423627 238000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -572) (undo-tree-id2839 . -1) (undo-tree-id2840 . -1) (undo-tree-id2841 . -1) (undo-tree-id2842 . -1) (undo-tree-id2843 . -1) (undo-tree-id2844 . -1) (undo-tree-id2845 . -1) (undo-tree-id2846 . -1) (undo-tree-id2847 . -1) (undo-tree-id2848 . -1) 573) nil (25174 32494 423614 197000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -468) (undo-tree-id2835 . -1) (undo-tree-id2836 . -1) (undo-tree-id2837 . -1) (undo-tree-id2838 . -1) 469) nil (25174 32494 423396 19000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -359) (undo-tree-id2833 . -1) (undo-tree-id2834 . -1) 360) nil (25174 32494 423379 149000) 0 nil])
([nil nil ((895 . 896) (t 25174 32494 434992 71000)) nil (25174 32551 409209 183000) 0 nil])
([nil nil ((3792 . 3793) (t 25174 32551 449197 410000)) nil (25174 32588 425962 367000) 0 nil])
([nil nil ((3793 . 3807)) nil (25174 32588 425951 792000) 0 nil])
([nil nil ((3933 . 3936) (t 25174 32588 433340 242000)) nil (25174 34122 366282 710000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg face font-lock-string-face)) . -3935) (undo-tree-id2878 . -1) 3936) nil (25174 34122 369634 473000) 0 nil])
([nil nil ((3697 . 3702) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 3696) (undo-tree-id2892 . -5) (undo-tree-id2893 . -5) (3695 . 3702)) nil (25174 34147 75031 201000) 0 nil] [nil nil ((3658 . 3663) (#("            " 0 12 (fontified nil)) . 3657) (undo-tree-id2876 . -12) (undo-tree-id2877 . -12) (3669 . 3670) (3656 . 3657)) ((#("
" 0 1 (fontified t clang-format+-chg chg)) . 3656) (#("
" 0 1 (fontified nil)) . 3669) (undo-tree-id2879 . -1) (undo-tree-id2880 . -1) (nil clang-format+-chg delete 3669 . 3670) (3657 . 3669) (#("	    " 0 5 (fontified t clang-format+-chg chg)) . 3658) (undo-tree-id2881 . -5)) (25174 34122 366269 621000) 0 nil])
([nil nil ((nil fontified nil 4085 . 4086) (nil fontified nil 4083 . 4085) (nil fontified nil 4070 . 4083) (nil fontified nil 4061 . 4070) (nil fontified nil 4060 . 4061) (nil fontified nil 4048 . 4060) (nil fontified nil 4047 . 4048) (nil fontified nil 4046 . 4047) (nil fontified nil 4045 . 4046) (nil fontified nil 4044 . 4045) (nil fontified nil 4043 . 4044) (nil fontified nil 4042 . 4043) (nil fontified nil 4041 . 4042) (nil fontified nil 4040 . 4041) (nil fontified nil 4039 . 4040) (nil fontified nil 4038 . 4039) (nil fontified nil 4037 . 4038) (nil fontified nil 4036 . 4037) (nil fontified nil 4035 . 4036) (nil fontified nil 4034 . 4035) (nil fontified nil 4033 . 4034) (nil fontified nil 4032 . 4033) (nil fontified nil 4031 . 4032) (nil fontified nil 4030 . 4031) (nil fontified nil 4029 . 4030) (nil fontified nil 4028 . 4029) (nil fontified nil 4027 . 4028) (nil fontified nil 4026 . 4027) (nil fontified nil 4025 . 4026) (nil fontified nil 4024 . 4025) (nil fontified nil 4023 . 4024) (nil fontified nil 4022 . 4023) (nil fontified nil 4021 . 4022) (nil fontified nil 4020 . 4021) (nil fontified nil 4019 . 4020) (nil fontified nil 4018 . 4019) (nil fontified nil 4017 . 4018) (nil fontified nil 4016 . 4017) (nil fontified nil 4015 . 4016) (nil fontified nil 4014 . 4015) (nil fontified nil 4013 . 4014) (nil fontified nil 4012 . 4013) (nil fontified nil 4011 . 4012) (nil fontified nil 4010 . 4011) (nil fontified nil 4009 . 4010) (nil fontified nil 4008 . 4009) (nil fontified nil 4007 . 4008) (nil fontified nil 4006 . 4007) (nil fontified nil 4005 . 4006) (nil fontified nil 4004 . 4005) (nil fontified nil 4003 . 4004) (nil fontified nil 4002 . 4003) (nil fontified nil 4001 . 4002) (nil fontified nil 4000 . 4001) (nil fontified nil 3999 . 4000) (nil fontified nil 3998 . 3999) (nil fontified nil 3997 . 3998) (nil fontified nil 3995 . 3997) (nil fontified nil 3992 . 3995) (nil fontified nil 3991 . 3992) (nil fontified nil 3990 . 3991) (nil fontified nil 3989 . 3990) (nil fontified nil 3988 . 3989) (nil fontified nil 3987 . 3988) (nil fontified nil 3986 . 3987) (nil fontified nil 3985 . 3986) (nil fontified nil 3984 . 3985) (nil fontified nil 3983 . 3984) (nil fontified nil 3982 . 3983) (nil fontified nil 3981 . 3982) (nil fontified nil 3980 . 3981) (nil fontified nil 3979 . 3980) (nil fontified nil 3978 . 3979) (nil fontified nil 3977 . 3978) (nil fontified nil 3976 . 3977) (nil fontified nil 3975 . 3976) (nil fontified nil 3974 . 3975) (nil fontified nil 3973 . 3974) (nil fontified nil 3972 . 3973) (nil fontified nil 3971 . 3972) (nil fontified nil 3970 . 3971) (nil fontified nil 3969 . 3970) (nil fontified nil 3968 . 3969) (nil fontified nil 3967 . 3968) (nil fontified nil 3966 . 3967) (nil fontified nil 3965 . 3966) (nil fontified nil 3964 . 3965) (nil fontified nil 3963 . 3964) (nil fontified nil 3962 . 3963) (nil fontified nil 3961 . 3962) (nil fontified nil 3960 . 3961) (nil fontified nil 3959 . 3960) (nil fontified nil 3958 . 3959) (nil fontified nil 3957 . 3958) (nil fontified nil 3956 . 3957) (nil fontified nil 3955 . 3956) (nil fontified nil 3954 . 3955) (nil fontified nil 3951 . 3954) (nil fontified nil 3950 . 3951) (nil fontified nil 3949 . 3950) (nil fontified nil 3948 . 3949) (nil fontified nil 3947 . 3948) (nil fontified nil 3946 . 3947) (nil fontified nil 3945 . 3946) (nil fontified nil 3944 . 3945) (nil fontified nil 3943 . 3944) (nil fontified nil 3942 . 3943) (nil fontified nil 3941 . 3942) (nil fontified nil 3940 . 3941) (nil fontified nil 3939 . 3940) (nil fontified nil 3938 . 3939) (nil fontified nil 3937 . 3938) (nil fontified nil 3936 . 3937) (nil fontified nil 3935 . 3936) (nil fontified nil 3934 . 3935) (nil fontified nil 3933 . 3934) (nil fontified nil 3932 . 3933) (nil fontified nil 3931 . 3932) (nil fontified nil 3930 . 3931) (nil fontified nil 3929 . 3930) (nil fontified nil 3928 . 3929) (nil fontified nil 3927 . 3928) (nil fontified nil 3922 . 3927) (nil fontified nil 3921 . 3922) (nil fontified nil 3920 . 3921) (nil fontified nil 3919 . 3920) (nil fontified nil 3918 . 3919) (nil fontified nil 3916 . 3918) (nil fontified nil 3915 . 3916) (nil fontified nil 3914 . 3915) (nil fontified nil 3913 . 3914) (nil fontified nil 3912 . 3913) (nil fontified nil 3911 . 3912) (nil fontified nil 3886 . 3911) (nil fontified nil 3885 . 3886) (nil fontified nil 3884 . 3885) (nil fontified nil 3883 . 3884) (nil fontified nil 3882 . 3883) (nil fontified nil 3881 . 3882) (nil fontified nil 3880 . 3881) (nil fontified nil 3879 . 3880) (nil fontified nil 3878 . 3879) (nil fontified nil 3877 . 3878) (nil fontified nil 3876 . 3877) (nil fontified nil 3875 . 3876) (nil fontified nil 3871 . 3875) (nil fontified nil 3864 . 3871) (nil fontified nil 3850 . 3864) (nil fontified nil 3849 . 3850) (nil fontified nil 3847 . 3849) (nil fontified nil 3846 . 3847) (nil fontified nil 3844 . 3846) (nil fontified nil 3843 . 3844) (nil fontified nil 3842 . 3843) (nil fontified nil 3841 . 3842) (nil fontified nil 3840 . 3841) (nil fontified nil 3839 . 3840) (nil fontified nil 3838 . 3839) (nil fontified nil 3837 . 3838) (nil fontified nil 3836 . 3837) (nil fontified nil 3835 . 3836) (nil fontified nil 3823 . 3835) (nil fontified nil 3822 . 3823) (nil fontified nil 3821 . 3822) (nil fontified nil 3820 . 3821) (nil fontified nil 3819 . 3820) (nil fontified nil 3818 . 3819) (nil fontified nil 3817 . 3818) (nil fontified nil 3816 . 3817) (nil fontified nil 3815 . 3816) (nil fontified nil 3814 . 3815) (nil fontified nil 3813 . 3814) (nil fontified nil 3812 . 3813) (nil fontified nil 3811 . 3812) (nil fontified nil 3810 . 3811) (nil fontified nil 3809 . 3810) (nil fontified nil 3808 . 3809) (nil fontified nil 3807 . 3808) (nil fontified nil 3806 . 3807) (nil fontified nil 3805 . 3806) (nil fontified nil 3804 . 3805) (nil fontified nil 3803 . 3804) (nil fontified nil 3802 . 3803) (nil fontified nil 3801 . 3802) (nil fontified nil 3800 . 3801) (nil fontified nil 3799 . 3800) (nil fontified nil 3798 . 3799) (nil fontified nil 3797 . 3798) (nil fontified nil 3796 . 3797) (nil fontified nil 3795 . 3796) (nil fontified nil 3794 . 3795) (nil fontified nil 3793 . 3794) (nil fontified nil 3792 . 3793) (nil fontified nil 3791 . 3792) (nil fontified nil 3790 . 3791) (nil fontified nil 3789 . 3790) (nil fontified nil 3788 . 3789) (nil fontified nil 3787 . 3788) (nil fontified nil 3786 . 3787) (nil fontified nil 3785 . 3786) (nil fontified nil 3784 . 3785) (nil fontified nil 3783 . 3784) (nil fontified nil 3782 . 3783) (nil fontified nil 3781 . 3782) (nil fontified nil 3780 . 3781) (nil fontified nil 3779 . 3780) (nil fontified nil 3778 . 3779) (nil fontified nil 3777 . 3778) (nil fontified nil 3776 . 3777) (nil fontified nil 3775 . 3776) (nil fontified nil 3774 . 3775) (nil fontified nil 3773 . 3774) (nil fontified nil 3772 . 3773) (nil fontified nil 3771 . 3772) (nil fontified nil 3770 . 3771) (nil fontified nil 3769 . 3770) (nil fontified nil 3768 . 3769) (nil fontified nil 3767 . 3768) (nil fontified nil 3766 . 3767) (nil fontified nil 3765 . 3766) (nil fontified nil 3764 . 3765) (nil fontified nil 3763 . 3764) (nil fontified nil 3755 . 3763) (nil fontified nil 3754 . 3755) (nil fontified nil 3753 . 3754) (nil fontified nil 3742 . 3753) (nil fontified nil 3741 . 3742) (nil fontified nil 3701 . 3741) (nil fontified nil 3696 . 3701) (3696 . 4086)) nil (25174 34147 75007 700000) 0 nil])
nil
([nil nil ((#("1" 0 1 (clang-format+-chg chg fontified t)) . -3882) (undo-tree-id2891 . -1) 3883) nil (25174 34147 74936 154000) 0 nil])
([nil nil ((3882 . 3883)) nil (25174 34147 74932 255000) 0 nil])
([nil nil ((#("2" 0 1 (clang-format+-chg chg fontified t)) . -3918) (undo-tree-id2890 . -1) 3919) nil (25174 34147 74929 760000) 0 nil])
([nil nil ((3918 . 3919)) nil (25174 34147 74925 801000) 0 nil])
([nil nil ((#("4" 0 1 (clang-format+-chg chg fontified t)) . -3947) (undo-tree-id2889 . -1) 3948) nil (25174 34147 74923 496000) 0 nil])
([nil nil ((3947 . 3948)) nil (25174 34147 74919 607000) 0 nil])
([nil nil ((#("2" 0 1 (clang-format+-chg chg fontified t)) . -3947) (undo-tree-id2887 . -1) (undo-tree-id2888 . -1) 3948) nil (25174 34147 74917 222000) 0 nil])
([nil nil ((3947 . 3948)) nil (25174 34147 74911 439000) 0 nil])
([nil nil ((#("3" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 3980) (#("/" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 3980) (#("0" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 3980) (#("1" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 3980)) nil (25174 34147 74908 102000) 0 nil])
([nil nil ((#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("r" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("m" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("c" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("n" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("o" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("s" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("c" 0 1 (clang-format+-chg delete fontified nil face font-lock-string-face)) . 4017) (#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("v" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("l" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("r" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("p" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 4017)) nil (25174 34147 74897 539000) 0 nil])
([nil nil ((#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017) (#("d" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4017)) nil (25174 34147 74888 790000) 0 nil])
([nil nil ((4017 . 4030)) nil (25174 34147 74886 495000) 0 nil])
([nil nil ((#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -4027) (undo-tree-id2884 . -1) (#("i" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -4028) (undo-tree-id2885 . -1) (#("r" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -4029) (undo-tree-id2886 . -1) 4030) nil (25174 34147 74882 707000) 0 nil])
([nil nil ((4027 . 4040)) nil (25174 34147 74874 128000) 0 nil])
([nil nil ((#("s" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -4038) (undo-tree-id2882 . -1) (#("a" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . -4039) (undo-tree-id2883 . -1) 4040) nil (25174 34147 74870 49000) 0 nil])
([nil nil ((4038 . 4048)) nil (25174 34147 74837 668000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . -4334) (undo-tree-id2894 . -1) 4335 (t 25174 34147 84248 822000)) nil (25174 34188 353955 742000) 0 nil])
([nil nil ((4334 . 4335)) nil (25174 34188 353930 657000) 0 nil])
([nil nil ((4092 . 4097) (#("	    " 0 5 (fontified nil clang-format+-chg chg)) . 4091) (undo-tree-id2897 . -5) (undo-tree-id2898 . -5) (4090 . 4097) (t 25174 34188 372755 277000)) nil (25174 34225 663119 221000) 0 nil])
([nil nil ((nil fontified nil 4485 . 4486) (nil fontified nil 4483 . 4485) (nil fontified nil 4470 . 4483) (nil fontified nil 4461 . 4470) (nil fontified nil 4460 . 4461) (nil fontified nil 4448 . 4460) (nil fontified nil 4447 . 4448) (nil fontified nil 4446 . 4447) (nil fontified nil 4445 . 4446) (nil fontified nil 4444 . 4445) (nil fontified nil 4443 . 4444) (nil fontified nil 4442 . 4443) (nil fontified nil 4441 . 4442) (nil fontified nil 4440 . 4441) (nil fontified nil 4439 . 4440) (nil fontified nil 4438 . 4439) (nil fontified nil 4437 . 4438) (nil fontified nil 4436 . 4437) (nil fontified nil 4435 . 4436) (nil fontified nil 4434 . 4435) (nil fontified nil 4433 . 4434) (nil fontified nil 4432 . 4433) (nil fontified nil 4431 . 4432) (nil fontified nil 4430 . 4431) (nil fontified nil 4429 . 4430) (nil fontified nil 4428 . 4429) (nil fontified nil 4427 . 4428) (nil fontified nil 4426 . 4427) (nil fontified nil 4425 . 4426) (nil fontified nil 4424 . 4425) (nil fontified nil 4423 . 4424) (nil fontified nil 4422 . 4423) (nil fontified nil 4421 . 4422) (nil fontified nil 4420 . 4421) (nil fontified nil 4419 . 4420) (nil fontified nil 4418 . 4419) (nil fontified nil 4417 . 4418) (nil fontified nil 4416 . 4417) (nil fontified nil 4415 . 4416) (nil fontified nil 4414 . 4415) (nil fontified nil 4413 . 4414) (nil fontified nil 4412 . 4413) (nil fontified nil 4411 . 4412) (nil fontified nil 4410 . 4411) (nil fontified nil 4409 . 4410) (nil fontified nil 4408 . 4409) (nil fontified nil 4407 . 4408) (nil fontified nil 4406 . 4407) (nil fontified nil 4405 . 4406) (nil fontified nil 4404 . 4405) (nil fontified nil 4403 . 4404) (nil fontified nil 4402 . 4403) (nil fontified nil 4401 . 4402) (nil fontified nil 4400 . 4401) (nil fontified nil 4399 . 4400) (nil fontified nil 4398 . 4399) (nil fontified nil 4397 . 4398) (nil fontified nil 4396 . 4397) (nil fontified nil 4395 . 4396) (nil fontified nil 4394 . 4395) (nil fontified nil 4393 . 4394) (nil fontified nil 4392 . 4393) (nil fontified nil 4391 . 4392) (nil fontified nil 4390 . 4391) (nil fontified nil 4389 . 4390) (nil fontified nil 4387 . 4389) (nil fontified nil 4384 . 4387) (nil fontified nil 4383 . 4384) (nil fontified nil 4382 . 4383) (nil fontified nil 4381 . 4382) (nil fontified nil 4380 . 4381) (nil fontified nil 4379 . 4380) (nil fontified nil 4378 . 4379) (nil fontified nil 4377 . 4378) (nil fontified nil 4376 . 4377) (nil fontified nil 4375 . 4376) (nil fontified nil 4374 . 4375) (nil fontified nil 4373 . 4374) (nil fontified nil 4372 . 4373) (nil fontified nil 4371 . 4372) (nil fontified nil 4370 . 4371) (nil fontified nil 4369 . 4370) (nil fontified nil 4368 . 4369) (nil fontified nil 4367 . 4368) (nil fontified nil 4366 . 4367) (nil fontified nil 4365 . 4366) (nil fontified nil 4364 . 4365) (nil fontified nil 4363 . 4364) (nil fontified nil 4362 . 4363) (nil fontified nil 4361 . 4362) (nil fontified nil 4360 . 4361) (nil fontified nil 4359 . 4360) (nil fontified nil 4358 . 4359) (nil fontified nil 4357 . 4358) (nil fontified nil 4356 . 4357) (nil fontified nil 4355 . 4356) (nil fontified nil 4354 . 4355) (nil fontified nil 4353 . 4354) (nil fontified nil 4352 . 4353) (nil fontified nil 4351 . 4352) (nil fontified nil 4350 . 4351) (nil fontified nil 4347 . 4350) (nil fontified nil 4346 . 4347) (nil fontified nil 4345 . 4346) (nil fontified nil 4344 . 4345) (nil fontified nil 4343 . 4344) (nil fontified nil 4342 . 4343) (nil fontified nil 4341 . 4342) (nil fontified nil 4340 . 4341) (nil fontified nil 4339 . 4340) (nil fontified nil 4338 . 4339) (nil fontified nil 4337 . 4338) (nil fontified nil 4336 . 4337) (nil fontified nil 4335 . 4336) (nil fontified nil 4334 . 4335) (nil fontified nil 4333 . 4334) (nil fontified nil 4332 . 4333) (nil fontified nil 4331 . 4332) (nil fontified nil 4330 . 4331) (nil fontified nil 4329 . 4330) (nil fontified nil 4328 . 4329) (nil fontified nil 4327 . 4328) (nil fontified nil 4326 . 4327) (nil fontified nil 4325 . 4326) (nil fontified nil 4324 . 4325) (nil fontified nil 4323 . 4324) (nil fontified nil 4318 . 4323) (nil fontified nil 4317 . 4318) (nil fontified nil 4316 . 4317) (nil fontified nil 4315 . 4316) (nil fontified nil 4314 . 4315) (nil fontified nil 4312 . 4314) (nil fontified nil 4311 . 4312) (nil fontified nil 4310 . 4311) (nil fontified nil 4309 . 4310) (nil fontified nil 4308 . 4309) (nil fontified nil 4307 . 4308) (nil fontified nil 4282 . 4307) (nil fontified nil 4281 . 4282) (nil fontified nil 4280 . 4281) (nil fontified nil 4279 . 4280) (nil fontified nil 4278 . 4279) (nil fontified nil 4277 . 4278) (nil fontified nil 4276 . 4277) (nil fontified nil 4275 . 4276) (nil fontified nil 4274 . 4275) (nil fontified nil 4273 . 4274) (nil fontified nil 4272 . 4273) (nil fontified nil 4271 . 4272) (nil fontified nil 4267 . 4271) (nil fontified nil 4260 . 4267) (nil fontified nil 4246 . 4260) (nil fontified nil 4245 . 4246) (nil fontified nil 4243 . 4245) (nil fontified nil 4242 . 4243) (nil fontified nil 4240 . 4242) (nil fontified nil 4239 . 4240) (nil fontified nil 4238 . 4239) (nil fontified nil 4237 . 4238) (nil fontified nil 4236 . 4237) (nil fontified nil 4235 . 4236) (nil fontified nil 4234 . 4235) (nil fontified nil 4233 . 4234) (nil fontified nil 4232 . 4233) (nil fontified nil 4231 . 4232) (nil fontified nil 4219 . 4231) (nil fontified nil 4218 . 4219) (nil fontified nil 4217 . 4218) (nil fontified nil 4216 . 4217) (nil fontified nil 4215 . 4216) (nil fontified nil 4214 . 4215) (nil fontified nil 4213 . 4214) (nil fontified nil 4212 . 4213) (nil fontified nil 4211 . 4212) (nil fontified nil 4210 . 4211) (nil fontified nil 4209 . 4210) (nil fontified nil 4208 . 4209) (nil fontified nil 4207 . 4208) (nil fontified nil 4206 . 4207) (nil fontified nil 4205 . 4206) (nil fontified nil 4204 . 4205) (nil fontified nil 4203 . 4204) (nil fontified nil 4202 . 4203) (nil fontified nil 4201 . 4202) (nil fontified nil 4200 . 4201) (nil fontified nil 4199 . 4200) (nil fontified nil 4198 . 4199) (nil fontified nil 4197 . 4198) (nil fontified nil 4196 . 4197) (nil fontified nil 4195 . 4196) (nil fontified nil 4194 . 4195) (nil fontified nil 4193 . 4194) (nil fontified nil 4192 . 4193) (nil fontified nil 4191 . 4192) (nil fontified nil 4190 . 4191) (nil fontified nil 4189 . 4190) (nil fontified nil 4188 . 4189) (nil fontified nil 4187 . 4188) (nil fontified nil 4186 . 4187) (nil fontified nil 4185 . 4186) (nil fontified nil 4184 . 4185) (nil fontified nil 4183 . 4184) (nil fontified nil 4182 . 4183) (nil fontified nil 4181 . 4182) (nil fontified nil 4180 . 4181) (nil fontified nil 4179 . 4180) (nil fontified nil 4178 . 4179) (nil fontified nil 4177 . 4178) (nil fontified nil 4176 . 4177) (nil fontified nil 4175 . 4176) (nil fontified nil 4174 . 4175) (nil fontified nil 4173 . 4174) (nil fontified nil 4172 . 4173) (nil fontified nil 4171 . 4172) (nil fontified nil 4170 . 4171) (nil fontified nil 4169 . 4170) (nil fontified nil 4168 . 4169) (nil fontified nil 4167 . 4168) (nil fontified nil 4166 . 4167) (nil fontified nil 4165 . 4166) (nil fontified nil 4164 . 4165) (nil fontified nil 4163 . 4164) (nil fontified nil 4162 . 4163) (nil fontified nil 4161 . 4162) (nil fontified nil 4160 . 4161) (nil fontified nil 4159 . 4160) (nil fontified nil 4151 . 4159) (nil fontified nil 4150 . 4151) (nil fontified nil 4149 . 4150) (nil fontified nil 4138 . 4149) (nil fontified nil 4137 . 4138) (nil fontified nil 4097 . 4137) (nil fontified nil 4092 . 4097) (4092 . 4486)) nil (25174 34225 663094 267000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("c" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("v" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("r" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("i" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("r" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("i" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("o" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("p" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("l" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("t" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("i" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("f" 0 1 (clang-format+-chg chg fontified t face font-lock-string-face)) . 4413)) nil (25174 34225 663013 793000) 0 nil])
([nil nil ((#("e" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("n" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("i" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("s" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("i" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("o" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("v" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#(" " 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("a" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413) (#("l" 0 1 (clang-format+-chg delete fontified t face font-lock-string-face)) . 4413)) nil (25174 34225 663001 396000) 0 nil])
([nil nil ((4413 . 4424)) nil (25174 34225 662996 285000) 0 nil])
([nil nil ((#("6" 0 1 (clang-format+-chg chg fontified t)) . -4314) (undo-tree-id2896 . -1) 4315) nil (25174 34225 662993 659000) 0 nil])
([nil nil ((4314 . 4316)) nil (25174 34225 662989 220000) 0 nil])
([nil nil ((#("2" 0 1 (clang-format+-chg chg fontified t)) . -4278) (undo-tree-id2895 . -1) 4279) nil (25174 34225 662985 542000) 0 nil])
([nil nil ((4278 . 4279)) nil (25174 34225 662958 12000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -4467) (undo-tree-id2899 . -1) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -4468) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (#("	" 0 1 (fontified nil)) . 4469) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (4467 . 4469) 4468 (t 25174 34225 679719 0)) nil (25174 34462 723697 274000) 0 nil])
([nil nil ((4717 . 4718) (t 25174 34462 768338 864000)) nil (25174 34469 723777 108000) 0 nil])
([nil current ((4718 . 4719)) nil (25174 34469 723766 877000) 0 nil])
nil
