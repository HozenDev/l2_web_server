(undo-tree-save-format-version . 1)
"d607cb35130ebff43e8cb26fe8baef49632f79cb"
[nil nil nil nil (25173 57949 736969 45000) 0 nil]
([nil nil ((546 . 547) (#("	" 0 1 (clang-format+-chg chg fontified nil)) . 545) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (545 . 547) (#("	" 0 1 (fontified nil)) . 544) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (545 . 546) (t 25173 26898 874679 742000)) nil (25173 57949 736966 39000) 0 nil])
([nil nil ((nil rear-nonsticky nil 639 . 640) (nil fontified nil 628 . 640) (nil fontified nil 603 . 628) (nil fontified nil 597 . 603) (nil fontified nil 596 . 597) (nil fontified nil 567 . 596) (nil fontified nil 558 . 567) (nil fontified nil 555 . 558) (nil fontified nil 554 . 555) (nil fontified nil 546 . 554) (546 . 640)) nil (25173 57949 736955 559000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -560) (undo-tree-id0 . -1) (#("l" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -561) (undo-tree-id1 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -562) (undo-tree-id2 . -1) (#("v" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -563) (undo-tree-id3 . -1) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -564) (undo-tree-id4 . -1) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -565) (undo-tree-id5 . -1) 566) nil (25173 57949 736948 997000) 0 nil])
([nil nil ((560 . 569)) nil (25173 57949 736891 839000) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -607) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("l" 0 1 (fontified t)) . -608) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("e" 0 1 (fontified t)) . -609) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("v" 0 1 (fontified t)) . -610) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (#("e" 0 1 (fontified t)) . -611) (undo-tree-id21 . -1) 612 (t 25173 57949 768288 640000)) nil (25173 57957 531051 542000) 0 nil])
([nil nil ((607 . 615)) nil (25173 57957 531024 221000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -650) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -651) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -652) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . -653) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("	" 0 1 (fontified nil)) . 654) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (646 . 654) 647 (t 25173 57957 536401 732000)) nil (25173 59232 368180 118000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -646) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -647) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -648) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -649) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 650) nil (25173 59232 368161 985000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -645) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -646) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -647) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -648) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . -649) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("	" 0 1 (fontified nil rear-nonsticky t)) . 650) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (645 . 650) 646) nil (25173 59232 368143 381000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -265) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 266 (t 25173 59232 398578 394000)) nil (25173 59246 38083 932000) 0 nil])
([nil nil ((646 . 647) (#("	" 0 1 (clang-format+-chg chg fontified nil)) . 645) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (644 . 647) (t 25173 59246 42099 896000)) nil (25173 59553 8667 665000) 0 nil])
([nil nil ((nil rear-nonsticky nil 744 . 745) (nil fontified nil 734 . 745) (nil fontified nil 733 . 734) (nil fontified nil 716 . 733) (nil fontified nil 715 . 716) (nil fontified nil 714 . 715) (nil fontified nil 713 . 714) (nil fontified nil 712 . 713) (nil fontified nil 711 . 712) (nil fontified nil 710 . 711) (nil fontified nil 709 . 710) (nil fontified nil 708 . 709) (nil fontified nil 707 . 708) (nil fontified nil 706 . 707) (nil fontified nil 700 . 706) (nil fontified nil 699 . 700) (nil fontified nil 688 . 699) (nil fontified nil 670 . 688) (nil fontified nil 669 . 670) (nil fontified nil 668 . 669) (nil fontified nil 667 . 668) (nil fontified nil 666 . 667) (nil fontified nil 665 . 666) (nil fontified nil 664 . 665) (nil fontified nil 663 . 664) (nil fontified nil 662 . 663) (nil fontified nil 661 . 662) (nil fontified nil 660 . 661) (nil fontified nil 658 . 660) (nil fontified nil 655 . 658) (nil fontified nil 654 . 655) (nil fontified nil 646 . 654) (646 . 745)) nil (25173 59553 8646 125000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("t" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("t" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("m" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("m" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("o" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 660) (#("g" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . 660)) nil (25173 59553 8635 255000) 0 nil])
([nil nil ((660 . 671)) nil (25173 59553 8632 349000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t clang-format+-chg delete)) . 709) (#("t" 0 1 (fontified t clang-format+-chg delete)) . 709) (#("t" 0 1 (fontified t clang-format+-chg delete)) . 709) (#("e" 0 1 (fontified t clang-format+-chg delete)) . 709) (#("m" 0 1 (fontified t clang-format+-chg delete)) . 709) (#("m" 0 1 (fontified t clang-format+-chg delete)) . 709) (#("o" 0 1 (fontified t clang-format+-chg delete)) . 709) (#("G" 0 1 (fontified t clang-format+-chg chg)) . 709)) nil (25173 59553 8627 941000) 0 nil])
([nil nil ((709 . 719)) nil (25173 59553 8620 407000) 0 nil])
([nil nil ((#(" " 0 1 (clang-format+-chg chg fontified t)) . -749) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -750) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -751) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#(" " 0 1 (clang-format+-chg chg fontified t)) . -752) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#(" " 0 1 (clang-format+-chg chg fontified nil)) . -753) (undo-tree-id82 . -1) (#("	" 0 1 (fontified nil)) . 754) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (749 . 754) 750 (t 25173 59553 6703 445000)) nil (25173 59650 701991 901000) 0 nil])
([nil nil ((751 . 752) (#("	" 0 1 (clang-format+-chg chg fontified nil)) . 750) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (749 . 752)) nil (25173 59650 701975 421000) 0 nil])
([nil nil ((nil fontified nil 853 . 854) (nil fontified nil 843 . 853) (nil fontified nil 842 . 843) (nil fontified nil 825 . 842) (nil fontified nil 824 . 825) (nil fontified nil 823 . 824) (nil fontified nil 822 . 823) (nil fontified nil 821 . 822) (nil fontified nil 820 . 821) (nil fontified nil 819 . 820) (nil fontified nil 818 . 819) (nil fontified nil 817 . 818) (nil fontified nil 816 . 817) (nil fontified nil 815 . 816) (nil fontified nil 814 . 815) (nil fontified nil 813 . 814) (nil fontified nil 807 . 813) (nil fontified nil 806 . 807) (nil fontified nil 795 . 806) (nil fontified nil 777 . 795) (nil fontified nil 776 . 777) (nil fontified nil 775 . 776) (nil fontified nil 774 . 775) (nil fontified nil 773 . 774) (nil fontified nil 772 . 773) (nil fontified nil 771 . 772) (nil fontified nil 770 . 771) (nil fontified nil 769 . 770) (nil fontified nil 768 . 769) (nil fontified nil 767 . 768) (nil fontified nil 766 . 767) (nil fontified nil 765 . 766) (nil fontified nil 763 . 765) (nil fontified nil 760 . 763) (nil fontified nil 759 . 760) (nil fontified nil 751 . 759) (751 . 854)) nil (25173 59650 701968 227000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("r" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("u" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("s" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("e" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("f" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("o" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("r" 0 1 (face font-lock-string-face fontified t clang-format+-chg delete)) . 765) (#("p" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . 765)) nil (25173 59650 701955 143000) 0 nil])
([nil nil ((765 . 776)) nil (25173 59650 701951 256000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-string-face fontified t clang-format+-chg chg)) . -775) (undo-tree-id71 . -1) 776) nil (25173 59650 701948 821000) 0 nil])
([nil nil ((775 . 783)) nil (25173 59650 701935 176000) 0 nil])
([nil nil ((783 . 784)) nil (25173 59650 701929 65000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . -822) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("r" 0 1 (fontified t)) . -823) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#("o" 0 1 (fontified t)) . -824) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (#("f" 0 1 (fontified t)) . -825) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (#("e" 0 1 (fontified t)) . -826) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (#("s" 0 1 (fontified t)) . -827) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (#("s" 0 1 (fontified t)) . -828) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (#("e" 0 1 (fontified t)) . -829) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (#("u" 0 1 (fontified t)) . -830) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (#("r" 0 1 (fontified t)) . -831) (undo-tree-id103 . -1) 832 (t 25173 59650 701384 311000)) nil (25173 59660 373200 359000) 0 nil])
([nil nil ((822 . 831)) nil (25173 59660 373162 538000) 0 nil])
([nil nil ((831 . 839)) nil (25173 59660 373156 447000) 0 nil])
([nil nil ((871 . 994) (t 25173 59660 405273 830000)) nil (25174 35263 622453 406000) 0 nil])
([nil nil ((931 . 933) (#("            " 0 12 (fontified t)) . 931) (t 25174 34954 892308 501000)) nil (25174 35263 622449 26000) 0 nil])
([nil nil ((933 . 935)) nil (25174 35263 622439 475000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t clang-format+-chg chg)) . -984) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -985) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -986) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (#(" " 0 1 (fontified t clang-format+-chg chg)) . -987) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#(" " 0 1 (fontified nil clang-format+-chg chg)) . -988) (undo-tree-id8 . -1) (#("	" 0 1 (fontified nil)) . 989) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (984 . 989) 985 (t 25174 35263 627683 972000)) nil (25174 35320 772845 735000) 0 nil])
([nil nil ((apply -9 872 993 undo--wrap-and-run-primitive-undo 872 993 ((987 . 990) (935 . 938) (880 . 883) 872))) nil (25174 35320 772776 339000) 0 nil])
([nil current ((#("
        // get(\"/gommettesAttribuees.create\", (req, res) -> {
	// 	//return GommetteAttribueeGUI.create();
        // });
" 0 1 (fontified t) 1 9 (fontified t c-in-sws t c-is-sws t) 9 10 (c-is-sws t c-in-sws t fontified t face font-lock-comment-delimiter-face) 10 12 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 12 16 (fontified t c-in-sws t face font-lock-comment-face) 16 45 (fontified t c-in-sws t face font-lock-comment-face) 45 63 (fontified t c-in-sws t face font-lock-comment-face) 63 64 (fontified t c-in-sws t) 64 67 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 67 68 (fontified t c-in-sws t face font-lock-comment-delimiter-face) 68 69 (fontified t c-in-sws t face font-lock-comment-face) 69 70 (fontified t c-in-sws t face font-lock-comment-face) 70 71 (fontified t c-in-sws t face font-lock-comment-face) 71 76 (fontified t c-in-sws t face font-lock-comment-face) 76 107 (fontified t c-in-sws t face font-lock-comment-face) 107 108 (fontified t c-in-sws t face font-lock-comment-face) 108 109 (fontified t c-in-sws t) 109 116 (fontified t c-in-sws t) 116 119 (c-in-sws t fontified t face font-lock-comment-delimiter-face) 119 120 (fontified t c-in-sws t face font-lock-comment-face) 120 122 (fontified t c-in-sws t face font-lock-comment-face) 122 123 (fontified t face font-lock-comment-face c-in-sws t)) . 871) (undo-tree-id11 . -1) (undo-tree-id12 . -68) (undo-tree-id13 . -122) (undo-tree-id14 . -122) (undo-tree-id15 . -1) (t 25174 35320 782416 589000)) nil (25174 36503 348350 564000) 0 nil])
nil
